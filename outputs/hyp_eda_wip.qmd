---
title: "Hypertension metrics"
subtitle: "Exploring metrics related to hypertension as reported in the CVDPREVENT audit in support of an evaluation of Core20PLUS5"
author: "Craig Parylo & Fikriyudin Mufasir"
date: today

title-block-banner: '#151412'
params:
  # should expensive calculations be re-calculated?
  # default = FALSE. Set to TRUE if running for the first time
  flag_calc_expensive_operations: FALSE
format:
  html:
    toc: true
    toc-depth: 3
    code-fold: true
    embed-resources: true
    fig-format: png
    fig-width: 10
    fig-height: 3
    fig-dpi: 600
    default-image-extension: svg
    lightbox: true
    editor: visual
    favicon: "favicon.ico"
    include-in-header:
      text: |
        <link rel="icon" type="image/x-icon" href="favicon.ico">
brand: _brand.yml
css: styles.css
bibliography: references.bib
---

```{r setup}
#| include: false

.libPaths(new = "C:/Users/craig.parylo/AppData/Local/Programs/R/R-4.4.2/library")

# load data -----------------------------------------------------------

# meta-data about the metrics
metric_meta <-
  readRDS(
    file = here::here('data', 'cvdprevent', 'cvd_prevent_meta.Rds')
  ) |> 
  janitor::clean_names()

# metrics at England system level
df_metrics_eng <-
  readRDS(
    file = here::here('data', 'cvdprevent', 'cvd_prevent_eng.Rds')
  ) |> 
  janitor::clean_names() |> 
  dplyr::mutate(
    # convert categorical details to factors for easier filtering
    dplyr::across(
      .cols = c(
        category_attribute, 
        indicator_code,
        metric_category_name,
        metric_category_type_name
      ),
      .fns = forcats::fct
    ),
    
    # format time periods
    time_period_month = lubridate::parse_date_time(
      time_period_name,
      orders = c("%b %Y")
    ),
    time_period_ym = zoo::as.yearmon(time_period_month),
    time_period_name_f = time_period_name |> 
      forcats::fct() |> 
      forcats::fct_reorder(time_period_ym, .na_rm = TRUE)
  )

# metrics at ICB system level
df_metrics_icb <-
  readRDS(
    file = here::here('data', 'cvdprevent', 'cvd_prevent_icb.Rds')
  ) |> 
  janitor::clean_names() |> 
  dplyr::mutate(
    # convert categorical details to factors for easier filtering
    dplyr::across(
      .cols = c(
        category_attribute, 
        indicator_code,
        metric_category_name,
        metric_category_type_name
      ),
      .fns = forcats::fct
    ),
    
    # format time periods
    time_period_month = lubridate::parse_date_time(
      time_period_name,
      orders = c("%b %Y")
    ),
    time_period_ym = zoo::as.yearmon(time_period_month),
    time_period_name_f = time_period_name |> 
      forcats::fct() |> 
      forcats::fct_reorder(time_period_ym, .na_rm = TRUE)
  )

# map data ---
# icb shapefiles
icb_sf <- sf::read_sf("https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/Integrated_Care_Boards_April_2023_EN_BSC/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson")
icb_sf <- icb_sf |> 
  #sf::st_simplify(dTolerance = 1000) # 2000 m
  rmapshaper::ms_simplify(keep = 0.05)
# icb data ---
# list focal icbs

#' Region	ICS
#' London       
#'    North Central London
#'    North East London
#' South West
#'    Bristol, North Somerset and South Gloucestershire
#'    Cornwall and the Isles of Scilly
#' North East and Yorkshire	  
#'    Humber and North Yorkshire
#'    North East and North Cumbria
#' East of England
#'    Bedfordshire, Luton and Milton Keynes
#'    Mid and South Essex
#' South East	
#'    Buckinghamshire, Oxfordshire and Berkshire West
#'    Hampshire and the Isle of Wight
#' North West	
#'    Lancashire and South Cumbria
#' Midlands	
#'    Black Country
#'    Herefordshire and Worcestershire
#'    Nottingham and Nottinghamshire

df_icb_focal <- readxl::read_xlsx(
  path = here::here('data', 'project', 'focal_icbs.xlsx'),
  sheet = 'focal_icbs'
)

# process data -----------------------------------------------------------


# get breakdowns by deprivation
df_dep_eng <- 
  df_metrics_eng |> 
  dplyr::filter(
    metric_category_type_name %in% c(
      'Deprivation quintile', 
      'Deprivation quintile - Age Standardised'
    ) 
  ) |> 
  dplyr::mutate(
    # prepare deprivation data
    deprivation = metric_category_name |> 
      as.character() |> 
      forcats::fct(
        levels = c(
          '1 - most deprived',
          '2',
          '3',
          '4',
          '5 - least deprived'
        )
      )
  )

## at ICB level
df_dep_icb <- 
  df_metrics_icb |> 
  dplyr::filter(
    metric_category_type_name %in% c(
      'Deprivation quintile', 
      'Deprivation quintile - Age Standardised'
    ) 
  ) |> 
  dplyr::mutate(
    # prepare deprivation data
    deprivation = metric_category_name |> 
      as.character() |> 
      forcats::fct(
        levels = c(
          '1 - most deprived',
          '2',
          '3',
          '4',
          '5 - least deprived'
        )
      )
  )

# custom functions -------------------------------------------------------
source(here::here('scripts', 'report_functions.R'))

```

# Introduction

## Core20PLUS5 approach

[Core20PLUS5](https://www.england.nhs.uk/about/equality/equality-hub/national-healthcare-inequalities-improvement-programme/core20plus5/) is an approach designed by the Healthcare Inequalities Improvement Programme (HiQiP) team at NHS England to reduce healthcare inequalities. Developed between 2021 and 2022, it is intended to influence practice at a national, regional and system level.

The approach focuses on the most deprived 20% of the population and locally determined 'PLUS' groups who experience barriers to accessing healthcare.

It highlights five clinical areas which require accelerated improvement. For adults, these are maternity, severe mental illness, chronic respiratory disease, early cancer diagnosis and hypertension case finding. For children and young people, these are asthma, diabetes, epilepsy, oral health and mental health.

## Five clinical areas (adults)

![Infographic for the Core20PLUS5 adult approach](images/core20plus5-infographic-v3-scaled.jpg)

#### Maternity

Ensuring continuity of care for women from Black, Asian and minority ethnic communities and from the most deprived groups. This model of care requires appropriate staffing levels to be implemented safely.

#### Severe Mental Illness (SMI)

Ensure annual physical health checks for people with SMI to at least nationally set targets.

#### Chronic Respiratory Disease

A clear focus on Chronic Obstructive Pulmonary Disease (COPD) driving up uptake of COVID, flu and pneumonia vaccines to reduce infective exacerbations and emergency hospital admissions due to those exacerbations.

#### Early Cancer Diagnosis

75% of cases diagnosed at stage 1 or 2 by 2028.

#### Hypertension Case-Finding and Optimal Management and Lipid Optimal Management

To allow for interventions to optimise blood pressure and minimise the risk of myocardial infarction and stroke.

See the [supporting document](https://www.england.nhs.uk/wp-content/uploads/2021/11/core20plus5-online-engage-survey-supporting-document-v1.pdf) for further information.

## Five clinical areas (children and young people)

![Infographic for the Core20PLUS5 children and young people approach](images/core20plus5-cyp-infographic-v2-scaled.jpg)

#### Asthma

Address over-reliance on reliever medications and decrease the number of asthma attacks.

#### Diabetes

Increase access to real-time continuous glucose monitors and insulin pumps across the most deprived quintiles and from ethnic minority backgrounds. Increase the proportion of those with Type-2 diabetes receiving recommended NICE care processes.

#### Epilepsy

Increase access to epilepsy specialist nurses and ensure access in the first year of care for those with a learning disability or autism.

#### Oral Health

Tooth extractions due to decay for children admitted as inpatients in hospital, aged 10 years and under.

#### Mental Health

Improve access rates to children and young people's mental health services for 0-17 year olds, for certain ethnic groups, age, gender and deprivation.

# Evaluation framework

Hypertension is the focal clinical area for this evaluation. It was selected in discussion with the HiQiP team because:

-   Around 25% of all deaths in England are attributable to [cardiovascular disease](https://cks.nice.org.uk/topics/cvd-risk-assessment-management/background-information/burden-of-cvd/#:~:text=It%20is%20estimated%20that%20CVD,CVD%20and%20all%2Dcause%20mortality.). Hypertension is a leading cause of CVD and it disproportionately affects the [most deprived population](https://cks.nice.org.uk/topics/hypertension/background-information/risk-factors/) (i.e. Core20).

-   Stakeholder perspectives that interventions relating to hypertension and wider cardiovascular disease (CVD) are key areas of activity for systems engaged in Core20PLUS5 approach delivery.

-   Availability of national datasets with longitudinal data relating to hypertension / CVD which can be used for the quantitative study, and which can be disaggregated to ICS level.

## Risk factors for hypertension {#sec-risk-factors-for-hypertension}

> Risk factors for hypertension include:
>
> -   **Age** - blood pressure tends to rise with advancing age.
>
> -   **Gender** - up to about 65 years, women tend to have a lower blood pressure than men. Between 65-74 years of age, women tend to have a higher blood pressure.
>
> -   **Ethnicity** - people of black African and black Caribbean origin are more likely to be diagnosed with hypertension.
>
> -   **Genetic** **factors** - research on twins suggest that up to 40% of variability in blood pressure may be explained by genetic factors. A positive family history increases the risk of developing hypertension.
>
> -   **Social deprivation** - people from the most deprived areas in England are 30% more likely to have hypertension than those from the least deprived.
>
> -   **Co-existing diabetes or kidney disease**.
>
> -   **Lifestyle** - smoking, excessive alcohol consumption, excess dietary salt, unhealthy diet, obesity, and lack of physical activity are associated with hypertension.
>
> -   **Anxiety and emotional stress** - can raise blood pressure due to increased adrenaline and cortisol levels.

[Hypertension: what are the risk factors?](https://cks.nice.org.uk/topics/hypertension/background-information/risk-factors/)

## Hypertension case finding

The following extract is from '[Evidence for the five clinical priorities](https://www.england.nhs.uk/about/equality/equality-hub/national-healthcare-inequalities-improvement-programme/core20plus5/evidence-for-the-five-clinical-priorities/)':

> High blood pressure, also known as hypertension, is a key priority within the NHS Long Term Plan and a risk factor for hospitalisation or death from heart attack or stroke.

> In 2016-18, around one in five avoidable deaths from cardiovascular disease in people under the age of 75 were among people in the most deprived decile of communities in England. Research suggests the incidence of high blood pressure within the most deprived communities is roughly double that of the most affluent areas and people living in the most deprived areas are nearly [twice as likely to have a stroke](https://www.thelancet.com/journals/lanpub/article/PIIS2468-2667(18)30030-6/fulltext).

> Finding people with hypertension allows early intervention to optimise blood pressure and reduce the risk of heart attacks and stroke. It also presents an opportunity to offer preventative measures to those at risk of developing the condition.

## Outcome metrics

The NICE clinical guidance for the [diagnosis and management of hypertension](https://www.nice.org.uk/guidance/ng136?UID=826478714202533225710) in adults consists of three stages:

-   Diagnosis of hypertension

-   Initiation of appropriate advice or treatment, and monitoring

-   Blood pressure maintained below treatment threshold

The following metrics from the [CVDPREVENT](https://www.cvdprevent.nhs.uk/) audit meet these criteria:

```{r}
# function to output the requested indicator as a {gt} table
output_metric_meta <- function(.indicator_code) {
  metric_meta |> 
    dplyr::filter(
      indicator_code == .indicator_code,
      age_standardised == 'N'
    ) |> 
    dplyr::arrange(indicator_code, meta_data_title) |> 
    dplyr::select(dplyr::any_of(c(
      'indicator_short_name', 'meta_data_title', 'meta_data'
    ))) |> 
    dplyr::filter(!meta_data_title %in% c(
      'Copyright', 'Data source', 'Indicator ID', 'Indicator title', 
      'Indicator short title', 'Confidence interval details', 
      'Geography breakdowns', 'Other breakdowns', 'Sex', 'Data quality', 
      'Data quality improvement plan', 'Methodology', 'Rationale', 
      'Interpretation guidance'
    )) |>
    dplyr::group_by(indicator_short_name) |> 
    gt::gt() |> 
    gt::tab_options(
      quarto.disable_processing = TRUE,
      table.align = 'left',
      column_labels.hidden = TRUE
    ) |> 
    gt::fmt_markdown()
}
```

::: panel-tabset
## 001HYP

```{r}
output_metric_meta(.indicator_code = 'CVDP001HYP')
```

This metric is available from March 2020 onwards. The period includes the change from Clinical Commissioning Groups (CCGs) and Sustainable Transformation Partnerships (STPs) to Integrated Care Boards (ICBs) and this will be considered as part of any analysis using this metric.

## 002HYP

```{r}
output_metric_meta(.indicator_code = 'CVDP002HYP')
```

This metric is available from March 2020 onwards.

## 003HYP

```{r}
output_metric_meta(.indicator_code = 'CVDP003HYP')
```

## 004HYP

```{r}
output_metric_meta(.indicator_code = 'CVDP004HYP')
```

This metric is available from March 2020 onwards and can be used to demonstrate the equity of ongoing management for patients with a diagnosis of hypertension.

## 005HYP

```{r}
output_metric_meta(.indicator_code = 'CVDP005HYP')
```

## 006HYP

```{r}
output_metric_meta(.indicator_code = 'CVDP006HYP')
```

## 007HYP

```{r}
output_metric_meta(.indicator_code = 'CVDP007HYP')
```

This metric was identified by the HiQiP team as a key indicator for monitoring progress within the CVD clinical area.

Need to evaluate whether there are sufficient pre-intervention data points to support quantitative analysis. Initial scoping shows this metric is available from September 2021 whereas the adult Core20Plus5 approach was launched in November 2021.

A minimum of three data points in the pre- and post-intervention period for ITS analyses is a common recommendation. As the data is collected quarterly this represents nine months, a period which may correspond with the implementation lag of the Core20PLUS5 approach.

## 009HYP

```{r}
output_metric_meta(.indicator_code = 'CVDP009HYP')
```
:::

## Focal ICBs

Special focus will be given to fourteen ICBs, called the focal ICBs, which have been selected as case studies. These ICBs are:

```{r}
#| fig-cap: Focal ICBs

df_icb_focal |>
  dplyr::group_by(nhs_region) |> 
  gt::gt(row_group_as_column = TRUE) |> 
  gt::tab_options(quarto.disable_processing = TRUE) |> 
  gt::tab_stubhead(label = "NHS Region") |> 
  gt::cols_label(
    area_code = "ICB Code",
    area_name = "ICB Name"
  )
```

Along with national trends we explore the performance of these fourteen ICBs in particular throughout this analysis.

# Analysis

## CVDP001HYP

This metric looks at the prevalence of GP-recorded hypertension without resolution in patients aged 18 and over.

The CVDPREVENT audit provides this metric calculated as the overall prevalence rates for each ICB and as age-standardised prevalence rates.

NB, age is a known risk factor for hypertension (see @sec-risk-factors-for-hypertension), so this is a useful way of addressing one of the confounders.

### National trends {#sec-national-trends}

England-wide prevalence of hypertension is available at both crude (unadjusted) prevalence from March 2020 and an age-standardised prevalence from March 2023.

The `crude prevalence` rate is the number of people registered with a GP practice with a record of hypertension divided by the total number of people registered with a GP practice.

The `age-standardised` rate, however, is determined using the method described by Dobson, [@Dobson1991], in which the crude prevalence is calculated in five-year age bands which are weighted and then scaled to give the scaled rate. The benefit of age-standardisation is it allows better comparison between time periods or between different geographic areas.

Breakdowns of England-wide hypertension prevalence rates are available by:

-   Gender (for crude prevalence and by age-standardised prevalence),

-   Age group (for crude prevalence only), and

-   Deprivation quintile (for crude prevalence and by age-standardised prevalence).

::: panel-tabset
#### Overall

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of hypertension prevalence in England as measured by the crude prevalence and age-adjusted prevalence

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP001HYP',
    metric_category_name == 'Persons', # get the overall value
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = dplyr::case_match(
      metric_category_type_name,
      "Sex" ~ "Crude prevalence",
      "Sex - Age Standardised" ~ "Age-standardised"
    ),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% hypertension prevalence\n"
    )
  ) |> 
  dplyr::group_by(series)

# prepare annotations
# get the latest reporting period and 
df_annotate <-
  df |> 
  dplyr::slice_max(time_period_month)

# show a trendline of England-level
df |> 
  plotly::plot_ly(
    x = ~ time_period_month,
    hovertemplate = ~ text
  ) |> 
  plotly::add_trace(
    name = "Crude",
    data = df |> 
      dplyr::filter(series == 'Crude prevalence'),
    y = ~ value,
    type = "scatter",
    mode = "markers+lines",
    marker = list(color = "#abc0e0"),
    line = list(color = adjustcolor("#abc0e0", alpha.f = 0.3), width = 5)
  ) |> 
  plotly::add_trace(
    name = "Standardised",
    data = df |> 
      dplyr::filter(series == "Age-standardised"),
    y = ~ value,
    type = "scatter",
    mode = "markers+lines",
    marker = list(color = "#f9bf07"),
    line = list(color = adjustcolor("#f9bf07", alpha.f = 0.3), width = 5)
  ) |> 
  plotly::add_annotations(
    data = df_annotate,
    text = ~ series,
    y = ~ value,
    showarrow = FALSE,
    xanchor = "left",
    borderpad = 10
  ) |> 
  plotly::layout(
    title = "England hypertension prevalence (CVDP001HYP)",
    font = plotly_font_family,
    xaxis = list(title = ""),
    yaxis = list(
      title = "Hypertension prevalence (percent)", 
      rangemode = "tozero"
    ),
    showlegend = FALSE
  ) |> 
  configure_plotly()
```

Between 2020 and 2022 the crude prevalence drops from 16.4% in March 2020 to 15.6% in March 2022.

Afterwards the trend is of an increasing rate of crude prevalence back at 16.4% by March 2024, a trend echoed by the age-standardised rate when after it is introduced in March 2023, which increases from 17.1% to 17.4% by March 2024.

Between March 2024 and June 2024 there is a jump in prevalence for both crude and age-adjusted measures (16.4% to 17.7% for crude prevalence, 17.4% to 18.7% for age-adjusted prevalence).

#### Gender

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of hypertension prevalence in England by gender as measured by the crude prevalence and age-adjusted prevalence

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP001HYP',
    metric_category_name != 'Persons', # get the overall value
    metric_category_type_name %in% c('Sex', 'Sex - Age Standardised')
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    # NB, dropping unused factor levels to ensure the colouring works
    series = metric_category_name |> forcats::fct_drop(),
    series_type = dplyr::if_else(
      condition = metric_category_type_name == 'Sex',
      true = "Crude rate",
      false = "Age-standardised rate"
    ),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series} ({series_type})\n",
      "{round(value, digits = 1)}% prevalence\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

plot <-
  plot_timeseries_agestandardised(
    df = df, 
    plot_title = "England hypertension prevalence (CVDP001HYP) - gender"
  )

plot

```

The crude prevalence rates show almost equal values for men and women across all time periods, which is contrasted by the age-standardised values which indicate higher hypertension prevalence rates for men.

Both genders follow similar patterns over time, maintaining around 1.5 percentage point difference in each reporting period. Both genders also demonstrate the same jump in prevalence in June 2024.

#### Age

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of hypertension prevalence in England by age groups as measured by crude prevalence

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP001HYP',
    category_attribute == 'Persons', # get the overall value
    metric_category_type_name %in% c('Age group')
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    # NB, dropping unused factor levels to ensure the colouring works
    series = metric_category_name |> forcats::fct_drop(),
    series_type = "Crude rate",
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series} ({series_type})\n",
      "{round(value, digits = 1)}% prevalence\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot
plot <-
  df |> 
  plot_timeseries(
    plot_title = "England hypertension prevalence (CVDP001HYP) - age group",
    y_axis_title = "Crude hypertension prevalence\n(percent)"
  )

plot
```

NB, only crude prevalence is available for age group.

There are stark differences in prevalence rate by age-group. There is a very clear relationship with increasing age being associated with higher prevalence of hypertension, with the youngest `18-39` years of age group having the lowest prevalence (1.1% in September 2024) and the oldest `80+` years of age group having the highest prevalence (61.6% in September 2024).

The jump in prevalence also appears to be related to age group, with the highest jump seen in the `80+` years group (an increase of 4.7 percentage points) compared with the `18-39` group (an increase of 0.1 percentage points).

It is clear there is a very strong relationship between age and hypertension prevalence and this strong correlation must be part of the reason the CVDPREVENT team provided age-standardised figures for other breakdowns for hypertension prevalence.

The strength of association means that relatively small changes in the age profile of a given area could have significant effects of the overall prevalence rates, and so we must bear this fact in mind during this analysis.

#### Deprivation

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of hypertension prevalence in England by deprivation as measured by the crude prevalence and age-adjusted prevalence

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP001HYP',
    category_attribute == 'Persons', # get the overall value
    metric_category_type_name %in% c('Deprivation quintile', 'Deprivation quintile - Age Standardised')
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    # NB, dropping unused factor levels to ensure the colouring works
    series = metric_category_name |> forcats::fct_drop(),
    series_type = "Crude rate",
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series} ({series_type})\n",
      "{round(value, digits = 1)}% prevalence\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot
plot <-
  df |> 
  plot_timeseries_agestandardised(
    plot_title = "England hypertension prevalence (CVDP001HYP) - deprivation"
  )

plot
```

#### Age ∩ Gender

```{r}
#| fig-height: 9
#| fig-cap: Timeseries of hypertension prevalence in England by the intersection of age group and gender as measured by the crude prevalence

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP001HYP',
    category_attribute != 'Persons', # get the overall value
    metric_category_type_name %in% c('Age group')
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    # NB, dropping unused factor levels to ensure the colouring works
    series = category_attribute |> forcats::fct_drop(),
    facet = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series} <b>({metric_category_name})</b>\n",
      "{round(value, digits = 1)}% prevalence\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)


# plot
plot_intersection_timeseries(
  .df = df,
  .y_axis_title = "Crude rate\n(percent)"
)
```

Men within the age groups 18-39, 40-50 and 60-79 are likely to have higher prevalence of hypertension than women.

This generality changes in the 80+ years group, however, where we observe that women are more likely than men to be hyptertensive.
:::

### Distributions over time

Hypertension prevalences are distributed unevenly across ICBs, with some having lower prevalences and others higher prevalences in each reporting period.

*Box-plots* provide one way to summarise distributions that allow comparisons across time, for example. Box-plots typically have the following components:

-   *median* - the average value among ICBs,

-   *box* - as defined by *Q~1~* and *Q~3~* (the 25th and 75th centiles), which define a range in which 50% of ICB values are found, also known as the *inter-quartile range,*

-   *min* and *max* - defining the accepted minimum and maximum values among ICBs and shown as 'whiskers' extending from the box,

-   *outliers* - values which are beyond the whiskers indicating potential extreme values, and defined as values above or below 1.5 times the interquartile range above the upper or lower quartiles.

![Anatomy of a box-plot](images/clipboard-3421696368.png)

#### Crude prevalence {#sec-prevalence}

Here we use box-plots to examine the distributions of hypertension prevalence over successive reporting periods:

```{r}
#| fig-height: 9
#| fig-cap: Distributions of crude hypertension prevalence per ICBs over successive reporting periods

df_metrics_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP001HYP',
    metric_category_name == 'Persons', # total counts of people
    metric_category_type_name == 'Sex' # exclude age-standardised
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ forcats::fct_rev(time_period_name_f),
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "Crude Hypertension Prevalence (CVDP001HYP)",
    font = plotly_font_family,
    xaxis = list(
      title = "Hypertension prevalence (percent)", 
      rangemode = "tozero"
    ),
    yaxis = list(title = "")
  ) |> 
  configure_plotly()
  
```

There is a trend of increasing prevalence of hypertension in adults over time. Starting around 16.1% in June 2022 the average (median) value shows an increasing trend upwards, arriving at 16.9% in March 2024.

Average prevalence jumped up between March 2024 and June 2024, increasing from 16.9% to 18.6%, finishing in September 2024 at 18.8%.

Some ICBs could be left behind in the national trend upwards because their hypertension prevalence is not increasing at the same rate. There is disparity between ICBs as noted by the increasingly wide whiskers. In June 2022 hypertension prevalence ranged between11.4% and 20.0% (a difference of 8.6 percentage points) which widened by September 2024 to between 12.2% and 21.7% (a difference of 9.5 percentage points).

The two outlier points in December 2023 and March 2024 are both due to NHS North West London ICB.

```{r}
# identify any outlier ICBs
df_outliers <- 
  df_metrics_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP001HYP',
    metric_category_name == 'Persons', # total counts of people
    metric_category_type_name == 'Sex' # exclude age-standardised
  ) |> 
  dplyr::mutate(
    # work out the quantiles
    q1 = stats::quantile(value, 0.25),
    q3 = stats::quantile(value, 0.75),
    iqr = stats::IQR(value),
    # flag records that are outside 1.5 times IQR
    flag_outlier = dplyr::case_when(
      value < (q1 - 1.5 * iqr) ~ 'Low outlier',
      value > (q3 + 1.5 * iqr) ~ 'High outlier'
    ),
    .by = time_period_name_f
  )

# show these in a table
df_outliers |> 
  dplyr::filter(flag_outlier == 'Low outlier') |> 
  dplyr::summarise(
    area_name,
    .by = time_period_name_f
  ) |> 
  dplyr::group_by(area_name) |> 
  gt::gt(row_group_as_column = TRUE) |> 
  gt::tab_options(quarto.disable_processing = TRUE) |> 
  gt::tab_stubhead(label = 'ICB name') |> 
  gt::cols_label(time_period_name_f = 'Outlying period') |> 
  gt::cols_align(time_period_name_f, align = 'left')
```

#### Age-standardised prevalence

> Hypertension is more likely to occur as we age. Areas with older populations are therefore likely to have higher prevalence of hypertension. Age standardisation allows adjustments to be made to reflect the different age profile of an area. This enables the user to discover whether the prevalence of disease in their area is, at least in part, due to the age make up of their population.

[CVDPREVENT audit - metric meta-data](https://data.cvdprevent.nhs.uk/data-explorer?period=20&level=7&area=8052&indicator=11&metadata=11#11)

```{r}
#| fig-height: 7
#| fig-cap: Distributions of age-standardised hypertension prevalence per ICBs over successive reporting periods

df_metrics_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP001HYP',
    metric_category_name == 'Persons', # total counts of people
    metric_category_type_name == 'Sex - Age Standardised'
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ forcats::fct_rev(time_period_name_f),
    type = "box",
    fillcolor = adjustcolor("#f9bf07", alpha.f = 0.5),
    line = list(color = '#f9bf07'),
    marker = list(color = '#f9bf07')
  ) |> 
  plotly::layout(
    title = "Age-Standardised Hypertension Prevalence (CVDP001HYP)",
    font = plotly_font_family,
    xaxis = list(
      title = "Age-standardised hypertension prevalence (percent)",
      rangemode = "tozero"
    ),
    yaxis = list(title = "")
  ) |> 
  configure_plotly()
```

NB, there are fewer reporting periods for age-standardised prevalence compared with the overall prevalence rates as the CVDPREVENT audit started reporting the age-standardised figures from March 2023 onwards.

Taking age-standardised prevalence into account there is similar rate of increase in hypertension prevalence when compared with the crude prevalence figures. Starting around 17.1% in June 2022 the average (median) value increases to 17.4% in March 2024.

The jump of 1.2 percentage points (pp) average prevalence between March 2024 and June 2024 is noticeable, echoing a similar leap of 1.7pp in the crude prevalence rates in this period.

There may less variation among ICBs when taking age into account. We observe narrower ranges in this age-standardised view compared with the crude rates, indicating less variation among ICBs, particularly in the latest periods, June 2024 and September 2024.

### Deprivation breakdowns

The CVDPREVENT audit publishes breakdowns of hypertension prevalence by gender, age group and deprivation quintile at ICB level.

In this section we explore how hypertension prevalence among ICBs is related to socio-economic deprivation, as defined by the Indices of Multiple Deprivation (IMD).

IMD is a statistical measure calculated at a national level that ranks each area from most deprived to the least deprived. The results are commonly divided into five groups, quintiles, based on their IMD statistic with one group comprising the *most* deprived 20% of the national areas another comprising the *least* deprived 20%, with three other groups taking up the remaining 60% of areas in-between.

#### Crude prevalence

Hypertension prevalence is distributed within and between deprivation groups as well as the distributions over time seen above.

The below animation illustrates this - please click on the 'Play' button or drag the slider along time periods.

```{r}
#| fig-height: 7

# prepare the metric data
df_dep_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP001HYP',
    metric_category_type_name == 'Deprivation quintile'
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ deprivation,
    frame = ~ time_period_name_f,
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "Crude hypertension prevalence ICB distribution by deprivation",
    font = plotly_font_family,
    xaxis = list(title = "Hypertension prevalence")
  ) |> 
  plotly::animation_slider(
    currentvalue = list(prefix = "", font = list(color = "black"))  
  ) |> 
  configure_plotly()
```

There is a relationship between deprivation and hypertension prevalence, with the most deprived group having a lower range of values than those in the less deprived groups (groups 4 and 5) across each reporting period.

The jump in average prevalence rates identified from the national view (see @sec-prevalence) between March 2024 and June 2024, is also notable from this view as a sudden right-shift in value between these two time points followed by a slight reduction across all deprivation quintiles in September 2024.

Looking at the England-wide prevalence rates per deprivation quintile over time illustrates the trends clearly.

```{r}
#| fig-height: 7
#| fig-cap: England crude hypertension prevalence per deprivation group over time

# summarise prevalence over time by deprivation
df <-
  df_dep_eng |> 
  dplyr::filter(
    indicator_code == 'CVDP001HYP',
    metric_category_type_name == 'Deprivation quintile'
  ) |> 
  dplyr::mutate(
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{round(value, digits = 1)}% hypertension prevalence\n"
    ),
    deprivation_text = glue::glue(
      "Deprivation\nquintile {as.numeric(deprivation)}"
    )
  ) |> 
  dplyr::group_by(deprivation_text)

# get annotation details
df_annotate <-
  df |> 
  dplyr::slice_max(order_by = time_period_month)

# plot the timeseries
df |> 
  plotly::plot_ly(
    x = ~ time_period_month,
    y = ~ value
  ) |> 
  plotly::add_trace(
    color = ~ deprivation_text,
    colors = crude_rate_range(n = 5),
    type = "scatter",
    mode = "lines",
    opacity = 0.5,
    line = list(width = 5)
  ) |> 
  plotly::add_trace(
    color = ~ deprivation_text,
    colors = crude_rate_range(n = 5),
    type = "scatter",
    mode = "markers",
    hovertemplate = ~ text
  ) |> 
  plotly::add_annotations(
    data = df_annotate,
    x = ~ time_period_month,
    y = ~ value,
    text = ~ deprivation,
    xanchor = 'left',
    showarrow = FALSE,
    borderpad = 10
  ) |> 
  plotly::layout(
    title = "England crude hypertension prevalence by deprivation",
    font = plotly_font_family,
    showlegend = FALSE,
    yaxis = list(
      title = "Hypertension prevalence (percent)", 
      showgrid = FALSE, showline = FALSE
    ),
    xaxis = list(title = "", showgrid = FALSE, showline = FALSE)
  ) |> 
  configure_plotly()
```

The *most deprived* quintile consistently has a lower prevalence of hypertension than the other four groups.

There is a clear relationship between deprivation and hypertension prevalence, though the nature of this relationship appears to be at odds with that identified from the literature. Based on risk factors (@sec-risk-factors-for-hypertension) we would expect to see a higher prevalence of hypertension in people who live in areas of higher deprivation, but we observe the opposite of this in which those who live the least deprived areas consistently have a higher prevalence of deprivation.

Unexpectedly, quintile 4 generally has a higher prevalence of hypertension than quintile 5.

#### Age-standardised prevalence

The age-standardised data will perhaps put these findings in a new light.

```{r}
#| fig-height: 7

# prepare the metric data
df_dep_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP001HYP',
    metric_category_type_name == 'Deprivation quintile - Age Standardised'
  ) |> 
  dplyr::mutate(
    time_period_name_f = time_period_name_f |> forcats::fct_drop()
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ deprivation,
    frame = ~ time_period_name_f,
    type = "box",
    fillcolor = adjustcolor("#f9bf07", alpha.f = 0.5),
    line = list(color = "#f9bf07"),
    marker = list(color = "#f9bf07")
  ) |> 
  plotly::layout(
    title = "Age-standardised hypertension prevalence ICB distribution by deprivation",
    font = plotly_font_family,
    xaxis = list(title = "Hypertension prevalence")
  ) |> 
  plotly::animation_slider(
    currentvalue = list(prefix = "", font = list(color = "black"))  
  ) |> 
  configure_plotly()
```

There is a relationship between deprivation and hypertension prevalence, with the most deprived group having generally higher prevalence than those in the least deprived groups across each reporting period.

There appear to be less variation between ICBs toward the latter reporting periods (the whiskers get smaller).

Looking at the England-wide prevalence rates per deprivation quintile over time illustrates the trends clearly.

```{r}
#| fig-height: 7
#| fig-cap: England age-standardised hypertension prevalence per deprivation group over time

# summarise prevalence over time by deprivation
df <-
  df_dep_eng |> 
  dplyr::filter(
    indicator_code == 'CVDP001HYP',
    metric_category_type_name == 'Deprivation quintile - Age Standardised'
  ) |> 
  dplyr::mutate(
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{round(value, digits = 1)}% hypertension prevalence\n"
    ),
    deprivation_text = glue::glue(
      "Deprivation\nquintile {as.numeric(deprivation)}"
    )
  ) |> 
  dplyr::group_by(deprivation_text)

# get annotation details
df_annotate <-
  df |> 
  dplyr::slice_max(order_by = time_period_month)

# plot the timeseries
df |> 
  plotly::plot_ly(
    x = ~ time_period_month,
    y = ~ value
  ) |> 
  plotly::add_trace(
    color = ~ deprivation_text,
    colors = age_adj_range(n = 5),
    type = "scatter",
    mode = "lines",
    opacity = 0.5,
    line = list(width = 5)
  ) |> 
  plotly::add_trace(
    color = ~ deprivation_text,
    colors = age_adj_range(n = 5),
    type = "scatter",
    mode = "markers",
    hovertemplate = ~ text
  ) |> 
  plotly::add_annotations(
    data = df_annotate,
    x = ~ time_period_month,
    y = ~ value,
    text = ~ deprivation,
    xanchor = 'left',
    showarrow = FALSE,
    borderpad = 10
  ) |> 
  plotly::layout(
    title = "England age-standardised hypertension prevalence by deprivation",
    font = plotly_font_family,
    showlegend = FALSE,
    yaxis = list(
      title = "Hypertension prevalence (percent)", 
      showgrid = FALSE, showline = FALSE
    ),
    xaxis = list(title = "", showgrid = FALSE, showline = FALSE)
  ) |> 
  configure_plotly()
```

Using age-standardised prevalence values we see an inversion in the relationship between deprivation and hypertension prevalence. Now, the most deprived quintile has a consistently higher prevalence of hypertension than all the other groups, a finding more in line with the findings from research (@sec-risk-factors-for-hypertension).

Using age-standardised prevalence provides a clearer view of changes over time.

The relationship between deprivation and hypertension prevalence is more pronounced. There is greater separation between deprivation groups at each reporting period, whereas the raw prevalence values indicated clustering between deciles 4, 5 and 3 in particular.

The sudden increase in prevalence between March and June 2024 is still visible and is present across all deprivation groups.

There is some indication the separation between `most deprived` and `least deprived` groups increased over time which means there appears to be a greater inequality in hypertension. This will be explored in more detail in the next section.

### Slope Index of Inequality

The Slope Index of Inequality (SII) is a statistical measure used to assess health disparities and socio-economic inequalities within a population.

It quantifies the relationship between a health outcome and a socio-economic variable, such as deprivation, by examining how the health outcome varies across different socio-economic groups.

The SII is particularly valuable because it provides a comprehensive view of inequality by considering the entire distribution of the socio-economic variable, rather than just comparing specific groups.

![Example Slope Index of Inequality (SII) chart, adapted from [@OFHID2024]](images/clipboard-880107973.png)

In this example we see the average life expectancy plotted for each deprivation quintile (dots) along with confidence interval estimates.

The dotted line is a linear regression line of best fit for the data, calculated by the least squares method.

The regression line slopes upwards indicating that average life expectancy is greater for people living in less deprived areas than it is for people living in areas of higher deprivation. The SII quantifies this relationship.

The SII of 20.5 years is the gradient of the line expressed as the difference between the top of the line at quintile 5 (least deprived, 76.5 years) and the bottom of the line at quintile 1 (most deprived, 56.0 years).

The SII is hypothetical absolute difference in life expectancy between the extremes of deprivation within the area as a whole.

The following analyses use estimates of the SII as produced by the `healthequal` R package [@healthequal], which can use linear and log-linear models of the relationship between deprivation and health outcomes.

#### Crude prevalence

To appreciate how the SII applies to this measure here is an example slope as calculated from the latest reporting time period:

```{r}
#| fig-height: 6
#| fig-cap: Inequality of crude hypertension prevalence by deprivation quintile - example month

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::slice_max(order_by = time_period_month) |> 
  dplyr::filter(
    indicator_code == "CVDP001HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(
    subgroup_order = as.numeric(deprivation),
    deprivation_text = glue::glue(
      "Deprivation quintile {as.numeric(deprivation)}"
    ),
    text = glue::glue(
      "<b>{deprivation_text}</b>\n",
      "{time_period_name}\n",
      "Prevalence: {round(value, digits = 1)}% ",
      "(95% CI: {round(lower_confidence_limit, digits = 2)}% to {round(upper_confidence_limit, digits = 2)}%)"
    )
  ) |> 
  dplyr::arrange(subgroup_order)

# calculate the sii
df_sii <-
  df |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      pop = denominator,
      subgroup_order = subgroup_order
    )
  ) |> 
  tidyr::unnest(sii)

# fit a lm for the linear regression
fit <- lm(value ~ as.numeric(deprivation), data = df)

# plot values by deprivation and simulate sii
df |> 
  plotly::plot_ly(
    x = ~ deprivation
  ) |> 
  plotly::add_segments(
    name = "95% Confidence Interval",
    x = ~ deprivation, xend = ~ deprivation,
    y = ~ lower_confidence_limit, yend = ~ upper_confidence_limit,
    line = list(color = adjustcolor("#abc0e0", alpha.f = 0.3), width = 5),
    hovertemplate = ""
  ) |> 
  plotly::add_trace(
    name = "Crude\nprevalence",
    y = ~ value,
    type = "scatter",
    mode = "markers",
    marker = list(size = 10, color = "#abc0e0"),
    hovertemplate = ~ text
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = fitted(fit),
    type = "scatter",
    mode = "lines",
    line = list(color = "#abc0e0", dash = "dot"),
    hovertemplate = glue::glue("SII: {fitted(fit)}")
  ) |> 
  plotly::add_annotations(
    x = ~ 3,
    y = ~ 15,
    text = glue::glue("<b>Slope Index of Inequality</b>\n{round(df_sii$estimate, digits = 1)}%"),
    showarrow = FALSE
  ) |> 
  plotly::layout(
    title = "Crude hypertension prevalence - September 2024",
    font = plotly_font_family,
    legend = list(orientation = "h"),
    xaxis = list(title = ""),
    yaxis = list(
      title = "Hypertension prevalence (percent)",
      rangemode = "tozero"
    )
  ) |> 
  configure_plotly()
```

This example using data from September 2024 illustrates the SII process. The calculated prevalence is plotted for each deprivation quintile and a regression line fitted to these points.

In this example the line is a linear regression using the least squares method, though it is also common to fit a logistic regression of log-prevalence which can give better results for outcomes expressed as a percentage, as in this case of hypertension prevalence.

The SII represents the difference in the fitted regression line between the most deprived and the least deprived groups.

For September 2024 the regression line slopes upward indicating the crude hypertension prevalence is higher for people living in areas of the least deprived quintile.

```{r}
#| fig-height: 6
#| fig-cap: Trend in inequality (SII) of crude hypertension prevalence

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::filter(
    indicator_code == "CVDP001HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      subgroup_order = subgroup_order,
      weight = denominator
    ),
    .by = c(time_period_month, time_period_name_f)
  ) |> 
  tidyr::unnest(sii) |> 
  dplyr::mutate(
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
      "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
    )
  )
    
# plot the sii over time
df |> 
  plotly::plot_ly(
    x = ~ time_period_month
  ) |> 
  plotly::add_trace(
    name = "Upper CI",
    y = ~ upperci,
    type = "scatter",
    mode = "lines",
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "Lower CI",
    y = ~ lowerci,
    type = "scatter",
    mode = "lines",
    fill = "tonexty",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.2),
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = ~ estimate,
    type = "scatter",
    mode = "lines+markers",
    hovertemplate = ~ text,
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "Slope Index of Inequality (SII) timeseries",
    font = plotly_font_family,
    showlegend = FALSE,
    yaxis = list(
      title = "Slope Index of Inequality (SII)\n(Closer to zero is better)", 
      showgrid = FALSE, showline = FALSE, 
      rangemode = "tozero"
    ),
    xaxis = list(title = "", showgrid = FALSE, showline = FALSE)
  ) |> 
  configure_plotly()
```

There was a reduction in inequality noted between March 2020 and September 2021 as the SII fell from 3.1 to 2.9 percent.

Afterwards the is an increase in inequality, increasing in each reporting period from September 2022 right up to June 2024.

September 2024's data indicates a reduction in inequality from June 2024's peak, falling from 4 to 3.9 percent.

#### Age-standardised prevalence {#sec-age-standardised-prevalence}

```{r}
#| fig-height: 6
#| fig-cap: Inequality of age-standardised hypertension prevalence by deprivation quintile - example month

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::slice_max(order_by = time_period_month) |> 
  dplyr::filter(
    indicator_code == "CVDP001HYP",
    metric_category_type_name == "Deprivation quintile - Age Standardised"
  ) |> 
  dplyr::mutate(
    subgroup_order = as.numeric(deprivation),
    deprivation_text = glue::glue(
      "Deprivation quintile {as.numeric(deprivation)}"
    ),
    text = glue::glue(
      "<b>{deprivation_text}</b>\n",
      "{time_period_name}\n",
      "Prevalence: {round(value, digits = 1)}% ",
      "(95% CI: {round(lower_confidence_limit, digits = 2)}% to {round(upper_confidence_limit, digits = 2)}%)"
    )
  ) |> 
  dplyr::arrange(subgroup_order) |> 
  # add in denominators as these are missing from age-standardised
  dplyr::select(-denominator) |> 
  dplyr::left_join(
    y = df_dep_eng |> 
      dplyr::slice_max(order_by = time_period_month) |> 
      dplyr::filter(
        indicator_code == "CVDP001HYP",
        metric_category_type_name == "Deprivation quintile"
      ) |> 
      dplyr::select(
        area_code, indicator_code, deprivation, denominator
      ),
    by = dplyr::join_by(
      area_code == area_code, 
      indicator_code == indicator_code,
      deprivation == deprivation
    )
  )

# calculate the sii
df_sii <-
  df |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      pop = denominator,
      subgroup_order = subgroup_order
    )
  ) |> 
  tidyr::unnest(sii)

# fit a lm for the linear regression
fit <- lm(value ~ as.numeric(deprivation), data = df)

# plot values by deprivation and simulate sii
df |> 
  plotly::plot_ly(
    x = ~ deprivation
  ) |> 
  plotly::add_segments(
    name = "95% Confidence Interval",
    x = ~ deprivation, xend = ~ deprivation,
    y = ~ lower_confidence_limit, yend = ~ upper_confidence_limit,
    line = list(color = adjustcolor("#f9bf07", alpha.f = 0.3), width = 5),
    hovertemplate = ""
  ) |> 
  plotly::add_trace(
    name = "Crude\nprevalence",
    y = ~ value,
    type = "scatter",
    mode = "markers",
    marker = list(size = 10, color = "#f9bf07"),
    hovertemplate = ~ text
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = fitted(fit),
    type = "scatter",
    mode = "lines",
    line = list(color = "#f9bf07", dash = "dot"),
    hovertemplate = glue::glue("SII: {fitted(fit)}")
  ) |> 
  plotly::add_annotations(
    x = ~ 3,
    y = ~ 15,
    text = glue::glue("<b>Slope Index of Inequality</b>\n{round(df_sii$estimate, digits = 1)}%"),
    showarrow = FALSE
  ) |> 
  plotly::layout(
    title = "Age-standardised hypertension prevalence - September 2024",
    font = plotly_font_family,
    legend = list(orientation = "h"),
    xaxis = list(title = ""),
    yaxis = list(
      title = "Hypertension prevalence (percent)",
      rangemode = "tozero"
    )
  ) |> 
  configure_plotly()
```

For September 2024 the regression line slopes downward indicating the age-standardised hypertension prevalence is greater for people living in areas of greater deprivation.

```{r}
#| fig-height: 6
#| fig-cap: Trend in inequality (SII) of age-standardised hypertension prevalence

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::filter(
    indicator_code == "CVDP001HYP",
    metric_category_type_name == "Deprivation quintile - Age Standardised"
  ) |> 
  # add in denominators as these are missing from age-standardised
  dplyr::select(-denominator) |> 
  dplyr::left_join(
    y = df_dep_eng |> 
      dplyr::filter(
        indicator_code == "CVDP001HYP",
        metric_category_type_name == "Deprivation quintile"
      ) |> 
      dplyr::select(
        area_code, 
        indicator_code, 
        deprivation, 
        time_period_month, 
        denominator
      ),
    by = dplyr::join_by(
      area_code == area_code, 
      indicator_code == indicator_code,
      deprivation == deprivation,
      time_period_month == time_period_month
    )
  ) |> 
  # continue with wrangling
  dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      subgroup_order = subgroup_order,
      weight = denominator
    ),
    .by = c(time_period_month, time_period_name_f)
  ) |> 
  tidyr::unnest(sii) |> 
  dplyr::mutate(
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
      "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
    )
  )

# plot the sii over time
df |> 
  plotly::plot_ly(
    x = ~ time_period_month
  ) |> 
  plotly::add_trace(
    name = "Upper CI",
    y = ~ upperci,
    type = "scatter",
    mode = "lines",
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "Lower CI",
    y = ~ lowerci,
    type = "scatter",
    mode = "lines",
    fill = "tonexty",
    fillcolor = adjustcolor("#f9bf07", alpha.f = 0.2),
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = ~ estimate,
    type = "scatter",
    mode = "lines+markers",
    hovertemplate = ~ text,
    line = list(color = "#f9bf07"),
    marker = list(color = "#f9bf07")
  ) |> 
  plotly::layout(
    title = "Slope Index of Inequality (SII) timeseries",
    font = plotly_font_family,
    showlegend = FALSE,
    yaxis = list(
      title = "Slope Index of Inequality (SII)\n(Closer to zero is better)", 
      showgrid = FALSE, showline = FALSE, 
      rangemode = "tozero"
    ),
    xaxis = list(title = "", showgrid = FALSE, showline = FALSE)
  ) |> 
  configure_plotly()
```

The SII measure of inequality remained almost static at -6.2 to -6.1 percent between March 2023 and March 2024.

There was an increase in inequality observed between March 2024 and June 2024, where the SII changed from -6.1 to -6.8 percent, and remained at this level in September 2024.

### Geography

```{r}
# expensive operation - process only if required
if (params$flag_calc_expensive_operations) {
  # prepare the data
  df_dep_icb_sii <-
    df_dep_icb |> 
    dplyr::filter(
      indicator_code == "CVDP001HYP",
      metric_category_type_name == "Deprivation quintile - Age Standardised"
    ) |> 
    # add in denominators as these are missing from age-standardised
    dplyr::select(-denominator) |> 
    dplyr::left_join(
      y = df_dep_icb |> 
        dplyr::filter(
          indicator_code == "CVDP001HYP",
          metric_category_type_name == "Deprivation quintile"
        ) |> 
        dplyr::select(
          area_code, 
          indicator_code, 
          deprivation, 
          time_period_month, 
          denominator
        ),
      by = dplyr::join_by(
        area_code == area_code, 
        indicator_code == indicator_code,
        deprivation == deprivation,
        time_period_month == time_period_month
      )
    ) |> 
    # continue with wrangling
    dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
    dplyr::summarise(
      sii = healthequal::sii(
        est = value,
        subgroup_order = subgroup_order,
        weight = denominator
      ),
      .by = c(time_period_month, time_period_name_f, area_code)
    ) |> 
    tidyr::unnest(sii) |> 
    dplyr::mutate(
      text = glue::glue(
        "<b>{time_period_name_f}</b>\n",
        "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
        "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
      )
    )
  
  # store for later use (this is an expensive operation)
  saveRDS(
    object = df_dep_icb_sii,
    file = here::here('data', 'project', 'df_dep_icb_sii_std.Rds')
  )
}
```

This map shows the SII in each time point for the 42 ICBs in England.

The colours are scaled to represent the level of inequality, ranging from yellow (0 SII) which represents equality across deprivation quintiles, to dark red (-12 SII) which represents a 12% difference between most and least deprived quintiles in the ICB.

Click on the radio buttons on the right-hand side of the map to see the results at different time periods.

```{r}
#| fig-height: 7
#| fig-cap: Geographical distribution of SII using age-standardised hypertension prevalence

# wrangling ---

# read the pre-processed icb sii file
df_sii <-
  readRDS(
    file = here::here('data', 'project', 'df_dep_icb_sii_std.Rds')
  ) |> 
  # sort by area code
  dplyr::arrange(area_code, time_period_name_f) |> 
  # add in ICB name
  dplyr::left_join(
    y = icb_sf |> 
      dplyr::select(
        ICB23CD,
        area_name = ICB23NM
      ) |> 
      # shorten the ICB name a little
      dplyr::mutate(
        area_name = area_name |> 
          stringr::str_replace(
            pattern = "Integrated Care Board",
            replacement = "ICB"
          )
      ),
    by = dplyr::join_by(
      area_code == ICB23CD
    )
  ) |> 
  # prepare the hover text info
  dplyr::mutate(
    hover_label = glue::glue(
      "<strong>{area_name}</strong></br>",
      "{time_period_name_f}</br>",
      "<strong>Slope Index of Inequality:</strong> {round(estimate, digits = 1)}%</br>",
      "<strong>95% Confidence Interval:</strong> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    ),
    hover_label_plotly = glue::glue(
      "<b>{area_name}</b>\n",
      "{time_period_name_f}\n",
      "<b>Slope Index of Inequality:</b> {round(estimate, digits = 1)}%\n",
      "<b>95% Confidence Interval:</b> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    )
  )

# define the colour palette for the choropleth
pal <- leaflet::colorNumeric(
  palette = "RdYlBu",
  # use a balanced set to ensure zero is the mid-point
  domain = seq(
    from = ceiling(max(abs(df_sii$estimate)))*-1,
    to = ceiling(max(abs(df_sii$estimate))),
    by = 1
  ),
  reverse = FALSE
)

# define a vector to list the layers
poly_layers <- c()

# leaflet map ---

# build the map
icb_sf |> 
  leaflet::leaflet() |> 
  add_leaflet_polygon(report_period = "To March 2023") |> 
  add_leaflet_polygon(report_period = "To June 2023") |> 
  add_leaflet_polygon(report_period = "To September 2023") |> 
  add_leaflet_polygon(report_period = "To December 2023") |> 
  add_leaflet_polygon(report_period = "To March 2024") |> 
  add_leaflet_polygon(report_period = "To June 2024") |>
  add_leaflet_polygon(report_period = "To September 2024") |> 
  leaflet::addLayersControl(
    baseGroups = poly_layers,
    options = leaflet::layersControlOptions(collapsed = FALSE)
  ) |> 
  leaflet::addLegend(
    pal = pal,
    values = df_sii$estimate,
    opacity = 0.7,
    title = "Key (%)",
    position = "bottomleft",
    #labels = bins
  )
```

The trend for greater inequality is represented by increasing numbers of ICBs turning from yellow to orange and red colours as you move down the different time periods, particularly noticeable in movement from March 2024 to June 2024.

Not all ICBs move in the same direction, however. One example is Birmingham and Solihull ICB which starts the series in March 2023 with a deep red colour (-12% SII) in contrast with the surrounding ICBs yellow and orange hues. Over time this ICB reduces inequality resulting in a mid-orange (-9.3% SII) by September 2024.

Some ICBs retain relatively static levels of inequality. An example is Cornwall and the Isles of Scilly ICB which starts in March 2023 with -2.3% SII, one of more equal ICBs by deprivation, which ends the series in September 2024 with -2.0% SII having undergone very little change over the time period.

#### Focal ICBs

This chart shows the SII metric over successive time periods across our fourteen focal ICBs using age-standardised hypertension prevalence.

```{r}
#| fig-height: 60
#| fig-cap: Trend in inequality (SII) of age-standardised hypertension prevalence for the focal ICBs
 
# produce a facet/subplot timeseries plots for each ICB
plot_list <- 
  plot_focal_scheme_sii_timeseries(
    .df_sii = df_sii,
    .df_icb_focal = df_icb_focal
  )

# display the plot
plot_list
```

Most ICBs maintain relatively stable metrics of inequality (SII) over this time period.

Some ICBs show signs of increasing inequality, such as `NHS Hampshire and Isle of Wight ICB` which had one of the most equal deprivation scores until March 2024 (-2.4% SII) after which inequality appears to have increased to -4.6% SII, putting the ICB within the middle of the pack.

Examples of improved equality are rarer but still visible in this set:

-   `NHS Cornwall and the Isles of Scilly` which improved from -2.3% in March 2023 to -2% in September 2024,

-   `NHS North Central London ICB` which improved from -8.7% in March 2023 to -8.3% in September 2024.

## CVDP002HYP

This metric looks at the percentage of patients aged 18 to 79 years with GP recorded hypertension, in whom the last clinic blood pressure or equivalent home or ambulatory blood pressure reading (measured in the preceding 12 months), is to the age and setting appropriate treatment threshold.

### National trends

Breakdowns of England-wide hypertension treated to threshold as unadjusted rates are available by:

-   Gender,

-   Age group,

-   Deprivation quintile,

-   Broad ethnic group,

-   People with or without a Learning Disability (LD), and

-   People with or without a Serious Mental Illness (SMI).

::: panel-tabset
#### Overall

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of hypertension treated to threshold (<80 yrs) in England

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP002HYP',
    metric_category_name == 'Persons', # get the overall value
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = "Treated to threshold" |> forcats::fct(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold < 80 yrs (CVDP002HYP)",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )

```

The main point to note from this chart is that once diagnosed up to 69% of people aged under 80 years of age were treated to threshold over this period.

There is a dramatic fall in the rate between March 2020 and March 2021, where the proportion of people treated to threshold fell from 67.5% to 46.1%.

The trend since March 2021, however, is upwards, peaking at 68.5% in March 2024 before falling slightly to 63.8% in June 2024 and 63.7% in September 2024.

Throughout this time-series we observe an increasing denominator over successive reporting periods, starting from 5.07 million (M) people in March 2020 to 7.09 M by September 2024.

#### Gender

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with hypertension treated to threshold (<80 yrs) in England by gender

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP002HYP',
    metric_category_type_name == 'Sex',
    metric_category_name != 'Persons'
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold < 80 yrs (CVDP002HYP) - gender",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )
```

The trends for each gender are broadly similar to the overall trends noted above. Women tend to have a higher crude rate of treatment to threshold than men for all reporting periods.

The denominators for both groups are broadly similar in each reporting period, however, there tend to be more men with hypertension than women. This fits with the national literature (see @sec-risk-factors-for-hypertension) that below the age of 65 years men tend to have higher blood pressure than women, with the inference than men are more likely to be diagnosed with hypertension.

#### Age

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with hypertension treated to threshold (<80 yrs) in England by age group

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP002HYP',
    metric_category_type_name == 'Age group',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold < 80 yrs (CVDP002HYP) - age group",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )
```

There is a clear pattern demonstrated here that as age-group increases so too does the likelihood for hypertension to be treated within limits. However, this relationship is not so nearly as strong as that observed between hypertension prevalence and age group (see @sec-national-trends).

Despite this narrower gap in treatment rate between the age groups, there are still notable differences in the denominators. In September 2024 the:

-   `60-79` age group had 4.69 M people in the denominator,

-   `40-59` age group had 2.18 M people in the denominator, around half of the `60-79` group,

-   `18-39` age group had only 0.21 M people in the denominator, around 4% of the `60-79` group.

Use of the crude treatment rates appears to present fewer issues than it did when looking at hypertension prevalence. The age groups are much closer in their treatment rates which means any differences in age profile between geographical areas are less likely to result in large effects on the overall treatment rate for the area.

#### Ethnicity

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with hypertension treated to threshold (<80 yrs) in England by ethnicity

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP002HYP',
    metric_category_type_name == 'Ethnicity',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold < 80 yrs (CVDP002HYP) - broad ethnic group",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )
```

The relationship between ethnicity and treatment to threshold is not clear from this visualisation.

There are disparities with some groups recording consistently lower rates, such as people with a `Black` broad ethnic background as well as those whose ethnicity is `Missing` from their GP record or who refused to provide this information for their GP record (`Not stated`), in contrast to people of `Asian` or `White` broad ethnic backgrounds who generally appear to achieve higher rates of treatment to threshold.

#### Deprivation

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with hypertension treated to threshold (<80 yrs) in England by deprivation quintile

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP002HYP',
    metric_category_type_name == 'Deprivation quintile',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold < 80 yrs (CVDP002HYP) - deprivation",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )
```

There is a clear relationship between deprivation quintile and treatment to threshold. People living in areas of higher deprivation consistently achieve lower rates of treatment to threshold compared with those living in areas of least deprivation.

Moreover, there appears to be a step-wise correlation between deprivation quintile and treatment to threshold, with people living in areas of higher deprivation less likely to achieve treatment to threshold.

#### SMI

Serious Mental Illness

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with hypertension treated to threshold (<80 yrs) in England by mental health status

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP002HYP',
    metric_category_type_name == 'Mental Health',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold < 80 yrs (CVDP002HYP) - SMI",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )
```

There are only three reporting periods available for this relatively new metric, introduced in March 2024.

It appears that people with a Serious Mental Illness are more likely to be treated to threshold than people without, (66.9% vs 63.7%, September 2024). However, the denominators show that there are far fewer people with SMI (0.11 M) than those without (6.97 M).

#### LD

Learning Disability

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with hypertension treated to threshold (<80 yrs) in England by mental learning disability status

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP002HYP',
    metric_category_type_name == 'Learning Disability',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold < 80 yrs (CVDP002HYP) - LD",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )
```

This metric was introduced in June 2023 illustrates that people with hypertension who also have a Learning Disability are more likely to achieve treatment to threshold than those without (70.1% vs 63.7%, September 2024).

#### Age ∩ Gender

```{r}
#| fig-height: 9
#| fig-cap: Timeseries of hypertension treated to threshold (<80 yrs) in England by the intersection of age group and gender

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP002HYP',
    category_attribute != 'Persons', # get the overall value
    metric_category_type_name %in% c('Age group')
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    # NB, dropping unused factor levels to ensure the colouring works
    series = category_attribute |> forcats::fct_drop(),
    facet = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series} <b>({metric_category_name})</b>\n",
      "{round(value, digits = 1)}% treatment to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)


# plot
plot_intersection_timeseries(
  .df = df,
  .y_axis_title = "Crude rate\n(percent)"
)
```

Women aged 18-39 and 40-59 are more likely to have their hypertension treated to threshold than men.

Both genders appear to have similar likelihood of treatment to threshold in the 60-79 years group.
:::

### Distributions over time

Hypertension treatment rates are distributed unevenly across ICBs, with some having lower rates and others higher rates in each reporting period.

*Box-plots* provide one way to summarise distributions that allow comparisons across time, for example.

```{r}
#| fig-height: 9
#| fig-cap: Distributions of rates of people with hypertension who are treated to threshold per ICBs over successive reporting periods

df_metrics_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP002HYP',
    metric_category_name == 'Persons', # total counts of people
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ forcats::fct_rev(time_period_name_f),
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "ICB distribution - hypertension treated to threshold < 80 yrs (CVDP002HYP)",
    font = plotly_font_family,
    xaxis = list(
      title = "People with hypertension treated to threshold (percent)", 
      rangemode = "tozero"
    ),
    yaxis = list(title = "")
  ) |> 
  configure_plotly()
```

Here we see an upward trend in treatment to threshold from June 2022 to March 2023, shown in the average (median) values increasing from 56% to 65%, but also by the upward movement in the distribution of this value among ICBs, as the minimum and maximum ranges increased too.

A plateau is reached between June 2023 and December 2023 where there is little change.

Following a spike in March 2024, where median value rose to 68%, there was a decrease in this metric to 63% in June and September 2024, accompanied by similar falls in the range of values as shown by the smaller minimum and maximum.

### Deprivation breakdowns

```{r}
#| fig-height: 7

# prepare the metric data
df_dep_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP002HYP',
    metric_category_type_name == 'Deprivation quintile'
  ) |> 
  dplyr::mutate(
    time_period_name_f = time_period_name_f |> forcats::fct_drop()
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ deprivation,
    frame = ~ time_period_name_f,
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "ICB distribution - hypertension treated to threshold < 80 yrs (CVDP002HYP)",
    font = plotly_font_family,
    xaxis = list(title = "Treated to threshold (percent)")
  ) |> 
  plotly::animation_slider(
    currentvalue = list(prefix = "", font = list(color = "black"))  
  ) |> 
  configure_plotly()
```

::: callout-note
#### Date limits

ICBs were established in the summer of 2022, replacing previous system of CCGs. As a result ICB-level data is only available from June 2022 onwards from the CVDPREVENT audit data, though it *may* be possible to construct ICB-level equivalent data based on CCG footprints to get data older than June 2022.

The decision whether to proceed with this rests on whether the additional back-dated data will be helpful in conducting the impact evaluation using techniques such as interrupted time-series analysis.
:::

There appears to be a relationship between deprivation and treatment to threshold in those aged under 80 years.

Interestingly, people living in areas of the highest deprivation are least likely to be treated to threshold and people living in areas of least deprivation are most likely to be treated to threshold. This is an inverse of the the relationship seen between deprivation and prevalence of hypertension.

This relationship seems to hold throughout successive time periods.

The trend for increasing rate of treatment to threshold is also visible here as the box plots move rightward (higher) between June 2022 and March 2023, the plateau between June 2023 and December 2023 followed by a spike and then fall backward for June 2024 and September 2024.

```{r}
#| fig-height: 7
#| fig-cap: England crude hypertension treated to threshold (<80 years) per deprivation group over time

# summarise prevalence over time by deprivation
df <-
  df_dep_eng |> 
  dplyr::filter(
    indicator_code == 'CVDP002HYP',
    metric_category_type_name == 'Deprivation quintile'
  ) |> 
  dplyr::mutate(
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{round(value, digits = 1)}% treatment to threshold (<80yrs)\n"
    ),
    deprivation_text = glue::glue(
      "Deprivation\nquintile {as.numeric(deprivation)}"
    ),
    time_period_name_f = time_period_name_f |> forcats::fct_drop()
  ) |> 
  dplyr::group_by(deprivation_text)

# get annotation details
df_annotate <-
  df |> 
  dplyr::slice_max(order_by = time_period_month)

# plot the timeseries
df |> 
  plotly::plot_ly(
    x = ~ time_period_month,
    y = ~ value
  ) |> 
  plotly::add_trace(
    color = ~ deprivation_text,
    colors = su_pal(n = 5),
    type = "scatter",
    mode = "lines",
    opacity = 0.5,
    line = list(width = 5)
  ) |> 
  plotly::add_trace(
    color = ~ deprivation_text,
    colors = su_pal(n = 5),
    type = "scatter",
    mode = "markers",
    hovertemplate = ~ text
  ) |> 
  plotly::add_annotations(
    data = df_annotate,
    x = ~ time_period_month,
    y = ~ value,
    text = ~ deprivation,
    xanchor = 'left',
    showarrow = FALSE,
    borderpad = 10
  ) |> 
  plotly::layout(
    title = "England - hypertension treated to threshold < 80 yrs (CVDP002HYP)",
    font = plotly_font_family,
    showlegend = FALSE,
    yaxis = list(
      title = "People with hypertension treated to threshold <80 yrs\n(percent)", 
      showgrid = FALSE, showline = FALSE,
      rangemode = "tozero"
    ),
    xaxis = list(title = "", showgrid = FALSE, showline = FALSE)
  ) |> 
  configure_plotly()
```

### Slope Index of Inequality

The Slope Index of Inequality (SII) is a statistical measure used to assess health disparities and socio-economic inequalities within a population.

It quantifies the relationship between a health outcome and a socio-economic variable, such as deprivation, by examining how the health outcome varies across different socio-economic groups.

The SII is particularly valuable because it provides a comprehensive view of inequality by considering the entire distribution of the socio-economic variable, rather than just comparing specific groups.

To appreciate how the SII applies to this measure here is an example slope as calculated from the latest reporting time period:

```{r}
#| fig-height: 6
#| fig-cap: Inequality of crude rate of treatment to threshold (<80 years) by deprivation quintile - example month

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::slice_max(order_by = time_period_month) |> 
  dplyr::filter(
    indicator_code == "CVDP002HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(
    subgroup_order = as.numeric(deprivation),
    deprivation_text = glue::glue(
      "Deprivation quintile {as.numeric(deprivation)}"
    ),
    text = glue::glue(
      "<b>{deprivation_text}</b>\n",
      "{time_period_name}\n",
      "Prevalence: {round(value, digits = 1)}% ",
      "(95% CI: {round(lower_confidence_limit, digits = 2)}% to {round(upper_confidence_limit, digits = 2)}%)"
    )
  ) |> 
  dplyr::arrange(subgroup_order)

# calculate the sii
df_sii <-
  df |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      pop = denominator,
      subgroup_order = subgroup_order
    )
  ) |> 
  tidyr::unnest(sii)

# fit a lm for the linear regression
fit <- lm(value ~ as.numeric(deprivation), data = df)

# plot values by deprivation and simulate sii
df |> 
  plotly::plot_ly(
    x = ~ deprivation
  ) |> 
  plotly::add_segments(
    name = "95% Confidence Interval",
    x = ~ deprivation, xend = ~ deprivation,
    y = ~ lower_confidence_limit, yend = ~ upper_confidence_limit,
    line = list(color = adjustcolor("#abc0e0", alpha.f = 0.3), width = 5),
    hovertemplate = ""
  ) |> 
  plotly::add_trace(
    name = "Rate",
    y = ~ value,
    type = "scatter",
    mode = "markers",
    marker = list(size = 10, color = "#abc0e0"),
    hovertemplate = ~ text
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = fitted(fit),
    type = "scatter",
    mode = "lines",
    line = list(color = "#abc0e0", dash = "dot"),
    hovertemplate = glue::glue("SII: {fitted(fit)}")
  ) |> 
  plotly::add_annotations(
    x = ~ 3,
    y = ~ 55,
    text = glue::glue("<b>Slope Index of Inequality</b>\n{round(df_sii$estimate, digits = 1)}%"),
    showarrow = FALSE
  ) |> 
  plotly::layout(
    title = "Crude hypertension prevalence - September 2024",
    font = plotly_font_family,
    legend = list(orientation = "h"),
    xaxis = list(title = ""),
    yaxis = list(
      title = "People with hypertension treated to threshold (<80 yrs)\n(percent)",
      rangemode = "tozero"
    )
  ) |> 
  configure_plotly()
```

```{r}
#| fig-height: 6
#| fig-cap: Trend in inequality (SII) of crude hypertension prevalence

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::filter(
    indicator_code == "CVDP002HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      subgroup_order = subgroup_order,
      weight = denominator
    ),
    .by = c(time_period_month, time_period_name_f)
  ) |> 
  tidyr::unnest(sii) |> 
  dplyr::mutate(
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
      "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
    )
  )
    
# plot the sii over time
df |> 
  plotly::plot_ly(
    x = ~ time_period_month
  ) |> 
  plotly::add_trace(
    name = "Upper CI",
    y = ~ upperci,
    type = "scatter",
    mode = "lines",
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "Lower CI",
    y = ~ lowerci,
    type = "scatter",
    mode = "lines",
    fill = "tonexty",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.2),
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = ~ estimate,
    type = "scatter",
    mode = "lines+markers",
    hovertemplate = ~ text,
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "Slope Index of Inequality (SII) timeseries",
    font = plotly_font_family,
    showlegend = FALSE,
    yaxis = list(
      title = "Slope Index of Inequality (SII)\n(Closer to zero is better)", 
      showgrid = FALSE, showline = FALSE, 
      rangemode = "tozero"
    ),
    xaxis = list(title = "", showgrid = FALSE, showline = FALSE)
  ) |> 
  configure_plotly()
```

There was a general trend of increasing inequality between March 2020 and March 2024, from 1.4% to 5.0%. There were three points of exceptions, a higher increase in inequality in March 2021 and a fall in inequality in December 2022 and December 2023.

There is a sharp fall in inequality between March 2024 and June 2024 (from 5.0% to 2.9%).

The confidence intervals are much tighter in this plot than those seen in the age-standardised hypertension prevalence (see @sec-age-standardised-prevalence), indicating there is much less uncertainty about these SII estimates.

### Geography

```{r}
# expensive operation - process only if required
if (params$flag_calc_expensive_operations) {
  # prepare the data
  df_dep_icb_sii <-
    df_dep_icb |> 
    dplyr::filter(
      indicator_code == "CVDP002HYP",
      metric_category_type_name == "Deprivation quintile"
    ) |> 
    # continue with wrangling
    dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
    dplyr::summarise(
      sii = healthequal::sii(
        est = value,
        subgroup_order = subgroup_order,
        weight = denominator
      ),
      .by = c(time_period_month, time_period_name_f, area_code)
    ) |> 
    tidyr::unnest(sii) |> 
    dplyr::mutate(
      text = glue::glue(
        "<b>{time_period_name_f}</b>\n",
        "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
        "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
      )
    )
  
  # store for later use (this is an expensive operation)
  saveRDS(
    object = df_dep_icb_sii,
    file = here::here('data', 'project', 'df_dep_icb_sii_p002.Rds')
  )
}
```

```{r}
#| fig-height: 7
#| fig-cap: Geographical distribution of SII using crude rates of people with hypertension treated to threshold (<80 yrs)

# wrangling ---

# read the pre-processed icb sii file
df_sii <-
  readRDS(
    file = here::here('data', 'project', 'df_dep_icb_sii_p002.Rds')
  ) |> 
  # sort by area code
  dplyr::arrange(area_code, time_period_name_f) |> 
  # add in ICB name
  dplyr::left_join(
    y = icb_sf |> 
      dplyr::select(
        ICB23CD,
        area_name = ICB23NM
      ) |> 
      # shorten the ICB name a little
      dplyr::mutate(
        area_name = area_name |> 
          stringr::str_replace(
            pattern = "Integrated Care Board",
            replacement = "ICB"
          )
      ),
    by = dplyr::join_by(
      area_code == ICB23CD
    )
  ) |> 
  # prepare the hover text info
  dplyr::mutate(
    hover_label = glue::glue(
      "<strong>{area_name}</strong></br>",
      "{time_period_name_f}</br>",
      "<strong>Slope Index of Inequality:</strong> {round(estimate, digits = 1)}%</br>",
      "<strong>95% Confidence Interval:</strong> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    ),
    hover_label_plotly = glue::glue(
      "<b>{area_name}</b>\n",
      "{time_period_name_f}\n",
      "<b>Slope Index of Inequality:</b> {round(estimate, digits = 1)}%\n",
      "<b>95% Confidence Interval:</b> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    )
  )

# define the colour palette for the choropleth
pal <- leaflet::colorNumeric(
  palette = "RdYlBu",
  # use a balanced set to ensure zero is the mid-point
  domain = seq(
    from = ceiling(max(abs(df_sii$estimate)))*-1,
    to = ceiling(max(abs(df_sii$estimate))),
    by = 1
  ),
  reverse = FALSE
)

# define a vector to list the layers
poly_layers <- c()

# leaflet map ---

# build the map
icb_sf |> 
  leaflet::leaflet() |> 
  add_leaflet_polygon(report_period = "To June 2022") |>
  add_leaflet_polygon(report_period = "To September 2022") |>
  add_leaflet_polygon(report_period = "To December 2022") |>
  add_leaflet_polygon(report_period = "To March 2023") |> 
  add_leaflet_polygon(report_period = "To June 2023") |> 
  add_leaflet_polygon(report_period = "To September 2023") |> 
  add_leaflet_polygon(report_period = "To December 2023") |> 
  add_leaflet_polygon(report_period = "To March 2024") |> 
  add_leaflet_polygon(report_period = "To June 2024") |>
  add_leaflet_polygon(report_period = "To September 2024") |> 
  leaflet::addLayersControl(
    baseGroups = poly_layers,
    options = leaflet::layersControlOptions(collapsed = FALSE)
  ) |> 
  leaflet::addLegend(
    pal = pal,
    values = df_sii$estimate,
    opacity = 0.7,
    title = "Key (%)",
    position = "bottomleft",
    labels = bins
  )
```

This map presents a the SII for each ICB as a snapshot by each reporting period. The colours range from red-yellow-blue, where generally:

-   red means a negative SII, which is where people with hypertension who live in areas of greater deprivation have higher rates of treatment to threshold,

-   yellow means an SII equal to or around zero, which means greater equity of treatment to threshold with respect to deprivation, and

-   blue means a positive SII, which is the area typically thought of as inequity of access where those who live in areas of highest deprivation have the lowest rates of treatment to threshold.

In June 2022 there is one ICB with a strong red colour, Birmingham and Solihull ICB, indicating higher deprivation correlates with higher rates of treatment to threshold.

A small number of ICBs have yellow/orange colours signifying more or less equality of access.

The majority of ICBs appear to be coloured various shades of blue, indicating they have inequity in which those who live in areas of higher deprivation have lower rates of treatment to threshold.

By March 2023 nearly all ICBs are coloured blue with a few coloured deeper blue, indicating greater inequity of access for people living in areas of highest deprivation.

In June 2024 and September 2024 the darker blue is replaced by more lighter shades indicating that inequity still exists but to a lesser extent than the peak of March 2023.

#### Focal ICBs

```{r}
#| fig-height: 60
#| fig-cap: Trend in inequality (SII) of crude rates of treatment to threshold for the focal ICBs
 
# produce a facet/subplot timeseries plots for each ICB
plot_list <- 
  plot_focal_scheme_sii_timeseries(
    .df_sii = df_sii,
    .df_icb_focal = df_icb_focal
  )

# display the plot
plot_list
```

## CVDP003HYP

This metric looks at the percentage of patients aged 80 years and above with GP recorded hypertension, in whom the last clinic blood pressure or equivalent home or ambulatory blood pressure reading (measured in the preceding 12 months), is to the age and setting appropriate treatment threshold.

### National trends

Breakdowns of England-wide hypertension treated to threshold as unadjusted rates are available by:

-   Gender,

-   Age group,

-   Deprivation quintile,

-   Broad ethnic group,

-   People with or without a Learning Disability (LD), and

-   People with or without a Serious Mental Illness (SMI).

::: panel-tabset
#### Overall

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of hypertension treated to threshold (80+ years) in England

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP003HYP',
    metric_category_name == 'Persons', # get the overall value
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = "Treated to threshold" |> forcats::fct(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold 80+ yrs (CVDP003HYP)",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )
```

#### Gender

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with hypertension treated to threshold (80+ yrs) in England by gender

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP003HYP',
    metric_category_type_name == 'Sex',
    metric_category_name != 'Persons'
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold 80+ yrs (CVDP003HYP) - gender",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )
```

#### Age

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with hypertension treated to threshold (80+ yrs) in England by age group

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP003HYP',
    metric_category_type_name == 'Age group',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold 80+ yrs (CVDP003HYP) - age group",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )
```

#### Ethnicity

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with hypertension treated to threshold (80+ yrs) in England by ethnicity

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP003HYP',
    metric_category_type_name == 'Ethnicity',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold 80+ yrs (CVDP003HYP) - broad ethnic group",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )
```

#### Deprivation

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with hypertension treated to threshold (80+ yrs) in England by deprivation quintile

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP003HYP',
    metric_category_type_name == 'Deprivation quintile',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold 80+ yrs (CVDP003HYP) - deprivation",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )
```

#### SMI

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with hypertension treated to threshold (80+ yrs) in England by mental health status

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP003HYP',
    metric_category_type_name == 'Mental Health',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold 80+ yrs (CVDP003HYP) - SMI",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )
```

#### LD

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with hypertension treated to threshold (80+ yrs) in England by mental learning disability status

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP003HYP',
    metric_category_type_name == 'Learning Disability',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England hypertension treated to threshold 80+ yrs (CVDP003HYP) - LD",
    y_axis_title = "People with hypertension treated to threshold\n(percent)"
  )
```

#### Age ∩ Gender

```{r}
#| fig-height: 4
#| fig-cap: Timeseries of treatment to threshold (80+ yrs) in England by the intersection of age group and gender

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP003HYP',
    category_attribute != 'Persons', # get the overall value
    metric_category_type_name %in% c('Age group')
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    # NB, dropping unused factor levels to ensure the colouring works
    series = category_attribute |> forcats::fct_drop(),
    facet = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series} <b>({metric_category_name})</b>\n",
      "{round(value, digits = 1)}% treatment to threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)


# plot
plot_intersection_timeseries(
  .df = df,
  .y_axis_title = "Crude rate\n(percent)"
)
```

In this 80+ years age group men are more likely than women to have their hypertension treated to threshold.
:::

### Distributions over time

Hypertension treatment rates are distributed unevenly across ICBs, with some having lower rates and others higher rates in each reporting period.

*Box-plots* provide one way to summarise distributions that allow comparisons across time, for example.

```{r}
#| fig-height: 9
#| fig-cap: Distributions of rates of people with hypertension who are treated to threshold per ICBs over successive reporting periods

df_metrics_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP003HYP',
    metric_category_name == 'Persons', # total counts of people
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ forcats::fct_rev(time_period_name_f),
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "ICB distribution - hypertension treated to threshold 80+ yrs (CVDP003HYP)",
    font = plotly_font_family,
    xaxis = list(
      title = "People with hypertension treated to threshold (percent)", 
      rangemode = "tozero"
    ),
    yaxis = list(title = "")
  ) |> 
  configure_plotly()
```

### Deprivation breakdowns

```{r}
#| fig-height: 7

# prepare the metric data
df_dep_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP003HYP',
    metric_category_type_name == 'Deprivation quintile'
  ) |> 
  dplyr::mutate(
    time_period_name_f = time_period_name_f |> forcats::fct_drop()
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ deprivation,
    frame = ~ time_period_name_f,
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "ICB distribution - hypertension treated to threshold > 80 yrs (CVDP003HYP)",
    font = plotly_font_family,
    xaxis = list(title = "Treated to threshold (percent)")
  ) |> 
  plotly::animation_slider(
    currentvalue = list(prefix = "", font = list(color = "black"))  
  ) |> 
  configure_plotly()
```

::: callout-note
#### Date limits

ICBs were established in the summer of 2022, replacing previous system of CCGs. As a result ICB-level data is only available from June 2022 onwards from the CVDPREVENT audit data, though it *may* be possible to construct ICB-level equivalent data based on CCG footprints to get data older than June 2022.

The decision whether to proceed with this rests on whether the additional back-dated data will be helpful in conducting the impact evaluation using techniques such as interrupted time-series analysis.
:::

### Slope Index of Inequality

The Slope Index of Inequality (SII) is a statistical measure used to assess health disparities and socio-economic inequalities within a population.

It quantifies the relationship between a health outcome and a socio-economic variable, such as deprivation, by examining how the health outcome varies across different socio-economic groups.

The SII is particularly valuable because it provides a comprehensive view of inequality by considering the entire distribution of the socio-economic variable, rather than just comparing specific groups.

To appreciate how the SII applies to this measure here is an example slope as calculated from the latest reporting time period:

```{r}
#| fig-height: 6
#| fig-cap: Inequality of crude rate of treatment to threshold (>80 years) by deprivation quintile - example month

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::slice_max(order_by = time_period_month) |> 
  dplyr::filter(
    indicator_code == "CVDP003HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(
    subgroup_order = as.numeric(deprivation),
    deprivation_text = glue::glue(
      "Deprivation quintile {as.numeric(deprivation)}"
    ),
    text = glue::glue(
      "<b>{deprivation_text}</b>\n",
      "{time_period_name}\n",
      "Prevalence: {round(value, digits = 1)}% ",
      "(95% CI: {round(lower_confidence_limit, digits = 2)}% to {round(upper_confidence_limit, digits = 2)}%)"
    )
  ) |> 
  dplyr::arrange(subgroup_order)

# calculate the sii
df_sii <-
  df |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      pop = denominator,
      subgroup_order = subgroup_order
    )
  ) |> 
  tidyr::unnest(sii)

# fit a lm for the linear regression
fit <- lm(value ~ as.numeric(deprivation), data = df)

# plot values by deprivation and simulate sii
df |> 
  plotly::plot_ly(
    x = ~ deprivation
  ) |> 
  plotly::add_segments(
    name = "95% Confidence Interval",
    x = ~ deprivation, xend = ~ deprivation,
    y = ~ lower_confidence_limit, yend = ~ upper_confidence_limit,
    line = list(color = adjustcolor("#abc0e0", alpha.f = 0.3), width = 5),
    hovertemplate = ""
  ) |> 
  plotly::add_trace(
    name = "Rate",
    y = ~ value,
    type = "scatter",
    mode = "markers",
    marker = list(size = 10, color = "#abc0e0"),
    hovertemplate = ~ text
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = fitted(fit),
    type = "scatter",
    mode = "lines",
    line = list(color = "#abc0e0", dash = "dot"),
    hovertemplate = glue::glue("SII: {fitted(fit)}")
  ) |> 
  plotly::add_annotations(
    x = ~ 3,
    y = ~ 55,
    text = glue::glue("<b>Slope Index of Inequality</b>\n{round(df_sii$estimate, digits = 1)}%"),
    showarrow = FALSE
  ) |> 
  plotly::layout(
    title = "Crude hypertension treatment to threshold (80+ yrs) - September 2024",
    font = plotly_font_family,
    legend = list(orientation = "h"),
    xaxis = list(title = ""),
    yaxis = list(
      title = "People with hypertension treated to threshold (>80 yrs)\n(percent)",
      rangemode = "tozero"
    )
  ) |> 
  configure_plotly()
```

```{r}
#| fig-height: 6
#| fig-cap: Trend in inequality (SII) of crude rates of treatment to threshold (80+ yrs)

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::filter(
    indicator_code == "CVDP003HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      subgroup_order = subgroup_order,
      weight = denominator
    ),
    .by = c(time_period_month, time_period_name_f)
  ) |> 
  tidyr::unnest(sii) |> 
  dplyr::mutate(
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
      "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
    )
  )
    
# plot the sii over time
df |> 
  plotly::plot_ly(
    x = ~ time_period_month
  ) |> 
  plotly::add_trace(
    name = "Upper CI",
    y = ~ upperci,
    type = "scatter",
    mode = "lines",
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "Lower CI",
    y = ~ lowerci,
    type = "scatter",
    mode = "lines",
    fill = "tonexty",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.2),
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = ~ estimate,
    type = "scatter",
    mode = "lines+markers",
    hovertemplate = ~ text,
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "Slope Index of Inequality (SII) timeseries",
    font = plotly_font_family,
    showlegend = FALSE,
    yaxis = list(
      title = "Slope Index of Inequality (SII)\n(Closer to zero is better)", 
      showgrid = FALSE, showline = FALSE, 
      rangemode = "tozero"
    ),
    xaxis = list(title = "", showgrid = FALSE, showline = FALSE)
  ) |> 
  configure_plotly()
```

There was a general trend of fluctuation inequality overtime. an increase was observed between March 2020 and March 2021, from 0.6% to 2% but afterwards there is a reduction in inequality to 0.6% in March 2022.

The percentage begin to increase again between June 2022 and March 2024 (0.6% to 1.6%).

There were two points of exceptions, a sharp fall after reached high percentage in inequality in March 2021 and March 2024.

The confidence intervals are much tighter in this plot than those seen in the age-standardised hypertension prevalence (see @sec-age-standardised-prevalence), indicating there is much less uncertainty about these SII estimates.

### Geography

```{r}
# expensive operation - process only if required
if (params$flag_calc_expensive_operations) {
  # prepare the data
  df_dep_icb_sii <-
    df_dep_icb |> 
    dplyr::filter(
      indicator_code == "CVDP003HYP",
      metric_category_type_name == "Deprivation quintile"
    ) |> 
    # continue with wrangling
    dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
    dplyr::summarise(
      sii = healthequal::sii(
        est = value,
        subgroup_order = subgroup_order,
        weight = denominator
      ),
      .by = c(time_period_month, time_period_name_f, area_code)
    ) |> 
    tidyr::unnest(sii) |> 
    dplyr::mutate(
      text = glue::glue(
        "<b>{time_period_name_f}</b>\n",
        "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
        "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
      )
    )
  
  # store for later use (this is an expensive operation)
  saveRDS(
    object = df_dep_icb_sii,
    file = here::here('data', 'project', 'df_dep_icb_sii_p003.Rds')
  )
}
```

```{r}
#| fig-height: 7
#| fig-cap: Geographical distribution of SII using crude rates of people with hypertension treated to threshold (>80 yrs)

# wrangling ---

# read the pre-processed icb sii file
df_sii <-
  readRDS(
    file = here::here('data', 'project', 'df_dep_icb_sii_p003.Rds')
  ) |> 
  # sort by area code
  dplyr::arrange(area_code, time_period_name_f) |> 
  # add in ICB name
  dplyr::left_join(
    y = icb_sf |> 
      dplyr::select(
        ICB23CD,
        area_name = ICB23NM
      ) |> 
      # shorten the ICB name a little
      dplyr::mutate(
        area_name = area_name |> 
          stringr::str_replace(
            pattern = "Integrated Care Board",
            replacement = "ICB"
          )
      ),
    by = dplyr::join_by(
      area_code == ICB23CD
    )
  ) |> 
  # prepare the hover text info
  dplyr::mutate(
    hover_label = glue::glue(
      "<strong>{area_name}</strong></br>",
      "{time_period_name_f}</br>",
      "<strong>Slope Index of Inequality:</strong> {round(estimate, digits = 1)}%</br>",
      "<strong>95% Confidence Interval:</strong> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    ),
    hover_label_plotly = glue::glue(
      "<b>{area_name}</b>\n",
      "{time_period_name_f}\n",
      "<b>Slope Index of Inequality:</b> {round(estimate, digits = 1)}%\n",
      "<b>95% Confidence Interval:</b> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    )
  )

# define the colour palette for the choropleth
pal <- leaflet::colorNumeric(
  palette = "RdYlBu",
  # use a balanced set to ensure zero is the mid-point
  domain = seq(
    from = ceiling(max(abs(df_sii$estimate)))*-1,
    to = ceiling(max(abs(df_sii$estimate))),
    by = 1
  ),
  reverse = FALSE
)

# define a vector to list the layers
poly_layers <- c()

# leaflet map ---

# build the map
icb_sf |> 
  leaflet::leaflet() |> 
  add_leaflet_polygon(report_period = "To June 2022") |>
  add_leaflet_polygon(report_period = "To September 2022") |>
  add_leaflet_polygon(report_period = "To December 2022") |>
  add_leaflet_polygon(report_period = "To March 2023") |> 
  add_leaflet_polygon(report_period = "To June 2023") |> 
  add_leaflet_polygon(report_period = "To September 2023") |> 
  add_leaflet_polygon(report_period = "To December 2023") |> 
  add_leaflet_polygon(report_period = "To March 2024") |> 
  add_leaflet_polygon(report_period = "To June 2024") |>
  add_leaflet_polygon(report_period = "To September 2024") |> 
  leaflet::addLayersControl(
    baseGroups = poly_layers,
    options = leaflet::layersControlOptions(collapsed = FALSE)
  ) |> 
  leaflet::addLegend(
    pal = pal,
    values = df_sii$estimate,
    opacity = 0.7,
    title = "Key (%)",
    position = "bottomleft",
    labels = bins
  )
```

This map presents a the SII for each ICB as a snapshot by each reporting period. The colours range from red-yellow-blue, where generally:

-   red means a negative SII, which is where people with hypertension who live in areas of greater deprivation have higher rates of treatment to threshold,

-   yellow means an SII equal to or around zero, which means greater equity of treatment to threshold with respect to deprivation, and

-   blue means a positive SII, which is the area typically thought of as inequity of access where those who live in areas of highest deprivation have the lowest rates of treatment to threshold.

In June 2022 there is one ICB with a strong red colour, Birmingham and Solihull ICB, indicating higher deprivation correlates with higher rates of treatment to threshold.

A small number of ICBs have yellow/orange colours signifying more or less equality of access.

The majority of ICBs appear to be coloured various shades of blue, indicating they have inequity in which those who live in areas of higher deprivation have lower rates of treatment to threshold.

By March 2023 nearly all ICBs are coloured blue with a few coloured deeper blue, indicating greater inequity of access for people living in areas of highest deprivation.

In June 2024 and September 2024 the darker blue is replaced by more yellow/orange indicating that inequity is getting worse than the peak of March 2023.



#### Focal ICBs

```{r}
#| fig-height: 60
#| fig-cap: Trend in inequality (SII) of crude rates of treatment to threshold for the focal ICBs
 
# produce a facet/subplot timeseries plots for each ICB
plot_list <-
  plot_focal_scheme_sii_timeseries(
    .df_sii = df_sii,
    .df_icb_focal = df_icb_focal
  )

# display the plot
plot_list
```


## CVDP004HYP

This metric looks at the percentage of patients aged 18 and over with GP recorded hypertension, with a record of a blood pressure reading in the preceding 12 months.

### National trends

Breakdowns of England-wide GP recorded hypertension with a record of a blood pressure reading as unadjusted rates are available by:

-   Gender,

-   Age group,

-   Deprivation quintile,

-   Broad ethnic group,

-   People with or without a Learning Disability (LD), and

-   People with or without a Serious Mental Illness (SMI).

::: panel-tabset
#### Overall

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of a record of blood pressure reading (recorded hypertension) in England

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP004HYP',
    metric_category_name == 'Persons', # get the overall value
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = "Blood pressure reading" |> forcats::fct(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{round(value, digits = 1)}% BP reading\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England recorded hypertension with a blood pressure reading record (CVDP004HYP)",
    y_axis_title = "People with recorded hypertension blood pressure reading\n(percent)"
  )
```

The main point to note from this chart is that GP hypertension with a record of a blood pressure reading reached the highest percentage up to 88.7% of people aged 18 and over were recorded over this period.

There is a dramatic fall in the rate between March 2020 and March 2021, where the proportion of people with recorded hypertension blood pressure reading fell from 88.7% to 63.5%.

The trend since March 2021, however, is upwards, peaking at 88.6% in March 2024 before falling slightly to 87.4% in June 2024 and 87% in September 2024.

Throughout this time-series we observe an increasing denominator over successive reporting periods, starting from 6.42 million (M) people in March 2020 to 8.95 M by September 2024.

#### Gender

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with recorded hypertension blood pressure reading in England by gender

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP004HYP',
    metric_category_type_name == 'Sex',
    metric_category_name != 'Persons'
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% BP reading\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England recorded hypertension with a record of blood pressure reading (CVDP004HYP) - gender",
    y_axis_title = "People with recorded hypertension blood pressure reading\n(percent)"
  )
```

The trends for each gender are broadly similar to the overall trends noted above. Women tend to have a higher crude rate of blood pressure reading record (recorded hypertension) than men for all reporting periods.

The denominators for both groups are broadly similar in each reporting period, however, there tend to be more men with hypertension than women. This fits with the national literature (see Section 2.1) that below the age of 65 years men tend to have higher blood pressure than women, with the inference than men are more likely to be diagnosed with hypertension.

#### Age

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with a blood pressure reading record (recorded hypertension) in England by age group

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP004HYP',
    metric_category_type_name == 'Age group',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% BP reading\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England recorded hypertension with a record of blood pressure reading (CVDP004HYP) - age group",
    y_axis_title = "People with recorded hypertension blood pressure reading\n(percent)"
  )
```

There is a clear pattern demonstrated here that as age-group increases so too does the likelihood for hypertension to be treated within limits. However, this relationship is not so nearly as strong as that observed between hypertension prevalence and age group (see @sec-national-trends).

Despite this narrower gap in BP reading record rate between the age groups, there are still notable differences in the denominators. In September 2024 the:

-   `60-79` age group had 4.69 M people in the denominator,

-   `40-59` age group had 2.18 M people in the denominator, around half of the `60-79` group,

-   `18-39` age group had only 0.21 M people in the denominator, around 4% of the `60-79` group.

Use of the crude BP reading record rates appears to present fewer issues than it did when looking at hypertension prevalence. The age groups are much closer in their blood pressure reading record rates which means any differences in age profile between geographical areas are less likely to result in large effects on the overall BP reading record rate for the area.

#### Ethnicity

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with blood pressure reading record (recorded hypertension) in England by ethnicity

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP004HYP',
    metric_category_type_name == 'Ethnicity',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% BP reading\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England recorded hypertension with a record of blood pressure reading (CVDP004HYP) - broad ethnic group",
    y_axis_title = "People with recorded hypertension blood pressure reading\n(percent)"
  )
```

The relationship between ethnicity and treatment to threshold is not clear from this visualisation.

There are disparities with some groups recording consistently lower rates, such as people with a `Black` broad ethnic background as well as those whose ethnicity is `Missing` from their GP record or who refused to provide this information for their GP record (`Not stated`), in contrast to people of `Asian` or `White` broad ethnic backgrounds who generally appear to achieve higher rates of blood pressure reading record.

#### Deprivation

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with a record of blood pressure reading (record hypertension) in England by deprivation quintile

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP004HYP',
    metric_category_type_name == 'Deprivation quintile',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% BP reading\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England recorded hypertension with a record of blood pressure reading (CVDP004HYP) - deprivation",
    y_axis_title = "People with recorded hypertension blood pressure reading\n(percent)"
  )
```

There is a clear relationship between deprivation quintile and blood pressure reading records. People living in areas of higher deprivation consistently achieve lower rates of recorded blood pressure reading compared with those living in areas of least deprivation.

Moreover, there appears to be a step-wise correlation between deprivation quintile and blood pressure reading records, with people living in areas of higher deprivation less likely to achieve recorded hypertention with a blood pressure records.

#### SMI

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with  blood pressure reading record (recorded hypertension) in England by mental health status

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP004HYP',
    metric_category_type_name == 'Mental Health',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% BP reading\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England recorded hypertension with a record of blood pressure reading (CVDP004HYP) - SMI",
    y_axis_title = "People with recorded hypertension blood pressure reading\n(percent)"
  )
```

There is a clear relationship between deprivation quintile and record of a blood pressure reading. People living in areas of higher deprivation consistently achieve lower rates of treatment to threshold compared with those living in areas of least deprivation.

Moreover, there appears to be a step-wise correlation between deprivation quintile and record of a blood pressure reading, with people living in areas of higher deprivation less likely to achieve treatment to threshold.

#### LD

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with blood pressure reading record (recorded hypertension) in England by mental learning disability status

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP004HYP',
    metric_category_type_name == 'Learning Disability',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% BP reading\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England recorded hypertension with a record of  blood pressure reading (CVDP004HYP) - LD",
    y_axis_title = "People with recorded hypertension blood pressure reading\n(percent)"
  )
```

This metric was introduced in June 2023 illustrates that people with hypertension who also have a Learning Disability are more likely to achieve recorded hypertension with a blood pressure reading record than those without (92.8% vs 87%, September 2024).

#### Age ∩ Gender

```{r}
#| fig-height: 9
#| fig-cap: Timeseries of blood pressure monitoring for people with hypertension in England by the intersection of age group and gender

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP004HYP',
    category_attribute != 'Persons', # get the overall value
    metric_category_type_name %in% c('Age group')
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    # NB, dropping unused factor levels to ensure the colouring works
    series = category_attribute |> forcats::fct_drop(),
    facet = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series} <b>({metric_category_name})</b>\n",
      "{round(value, digits = 1)}% BP monitoring\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)


# plot
plot_intersection_timeseries(
  .df = df,
  .y_axis_title = "Crude rate\n(percent)"
)
```

Women aged 18-39 and 40-59 are slightly more likely than men in these age groups to have routine blood pressure monitoring for their hypertension.

In the 60-70 age group both genders are equally likely to have their blood pressure monitored.

In the 80+ years age group we observe men are slightly more likely than women to have their blood pressure monitored.
:::

### Distributions over time

Hypertension with a blood pressure reading record rates are distributed unevenly across ICBs, with some having lower rates and others higher rates in each reporting period.

*Box-plots* provide one way to summarise distributions that allow comparisons across time, for example.

```{r}
#| fig-height: 9
#| fig-cap: Distributions of rates of people with recorded hypertension blood pressure reading per ICBs over successive reporting periods

df_metrics_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP004HYP',
    metric_category_name == 'Persons', # total counts of people
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ forcats::fct_rev(time_period_name_f),
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "ICB distribution - recorded hypertension with a blood pressure reading record (CVDP004HYP)",
    font = plotly_font_family,
    xaxis = list(
      title = "People with recorded hypertension blood pressure reading (percent)", 
      rangemode = "tozero"
    ),
    yaxis = list(title = "")
  ) |> 
  configure_plotly()
```

### Deprivation breakdowns

```{r}
#| fig-height: 7

# prepare the metric data
df_dep_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP004HYP',
    metric_category_type_name == 'Deprivation quintile'
  ) |> 
  dplyr::mutate(
    time_period_name_f = time_period_name_f |> forcats::fct_drop()
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ deprivation,
    frame = ~ time_period_name_f,
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "ICB distribution - recorded hypertension with record of a blood pressure reading (CVDP004HYP)",
    font = plotly_font_family,
    xaxis = list(title = "BP reading (percent)")
  ) |> 
  plotly::animation_slider(
    currentvalue = list(prefix = "", font = list(color = "black"))  
  ) |> 
  configure_plotly()
```

::: callout-note
#### Date limits

ICBs were established in the summer of 2022, replacing previous system of CCGs. As a result ICB-level data is only available from June 2022 onwards from the CVDPREVENT audit data, though it *may* be possible to construct ICB-level equivalent data based on CCG footprints to get data older than June 2022.

The decision whether to proceed with this rests on whether the additional back-dated data will be helpful in conducting the impact evaluation using techniques such as interrupted time-series analysis.
:::

### Slope Index of Inequality

The Slope Index of Inequality (SII) is a statistical measure used to assess health disparities and socio-economic inequalities within a population.

It quantifies the relationship between a health outcome and a socio-economic variable, such as deprivation, by examining how the health outcome varies across different socio-economic groups.

The SII is particularly valuable because it provides a comprehensive view of inequality by considering the entire distribution of the socio-economic variable, rather than just comparing specific groups.

To appreciate how the SII applies to this measure here is an example slope as calculated from the latest reporting time period:

```{r}
#| fig-height: 6
#| fig-cap: Inequality of crude rate of blood pressure reading record by deprivation quintile - example month

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::slice_max(order_by = time_period_month) |> 
  dplyr::filter(
    indicator_code == "CVDP004HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(
    subgroup_order = as.numeric(deprivation),
    deprivation_text = glue::glue(
      "Deprivation quintile {as.numeric(deprivation)}"
    ),
    text = glue::glue(
      "<b>{deprivation_text}</b>\n",
      "{time_period_name}\n",
      "Prevalence: {round(value, digits = 1)}% ",
      "(95% CI: {round(lower_confidence_limit, digits = 2)}% to {round(upper_confidence_limit, digits = 2)}%)"
    )
  ) |> 
  dplyr::arrange(subgroup_order)

# calculate the sii
df_sii <-
  df |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      pop = denominator,
      subgroup_order = subgroup_order
    )
  ) |> 
  tidyr::unnest(sii)

# fit a lm for the linear regression
fit <- lm(value ~ as.numeric(deprivation), data = df)

# plot values by deprivation and simulate sii
df |> 
  plotly::plot_ly(
    x = ~ deprivation
  ) |> 
  plotly::add_segments(
    name = "95% Confidence Interval",
    x = ~ deprivation, xend = ~ deprivation,
    y = ~ lower_confidence_limit, yend = ~ upper_confidence_limit,
    line = list(color = adjustcolor("#abc0e0", alpha.f = 0.3), width = 5),
    hovertemplate = ""
  ) |> 
  plotly::add_trace(
    name = "Rate",
    y = ~ value,
    type = "scatter",
    mode = "markers",
    marker = list(size = 10, color = "#abc0e0"),
    hovertemplate = ~ text
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = fitted(fit),
    type = "scatter",
    mode = "lines",
    line = list(color = "#abc0e0", dash = "dot"),
    hovertemplate = glue::glue("SII: {fitted(fit)}")
  ) |> 
  plotly::add_annotations(
    x = ~ 3,
    y = ~ 55,
    text = glue::glue("<b>Slope Index of Inequality</b>\n{round(df_sii$estimate, digits = 1)}%"),
    showarrow = FALSE
  ) |> 
  plotly::layout(
    title = "Crude recorded hypertension with record of a blood pressure reading  - September 2024",
    font = plotly_font_family,
    legend = list(orientation = "h"),
    xaxis = list(title = ""),
    yaxis = list(
      title = "People with recorded hypertension blood pressure reading \n(percent)",
      rangemode = "tozero"
    )
  ) |> 
  configure_plotly()
```

```{r}
#| fig-height: 6
#| fig-cap: Trend in inequality (SII) of crude rates of blood pressure reading record

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::filter(
    indicator_code == "CVDP004HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      subgroup_order = subgroup_order,
      weight = denominator
    ),
    .by = c(time_period_month, time_period_name_f)
  ) |> 
  tidyr::unnest(sii) |> 
  dplyr::mutate(
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
      "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
    )
  )
    
# plot the sii over time
df |> 
  plotly::plot_ly(
    x = ~ time_period_month
  ) |> 
  plotly::add_trace(
    name = "Upper CI",
    y = ~ upperci,
    type = "scatter",
    mode = "lines",
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "Lower CI",
    y = ~ lowerci,
    type = "scatter",
    mode = "lines",
    fill = "tonexty",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.2),
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = ~ estimate,
    type = "scatter",
    mode = "lines+markers",
    hovertemplate = ~ text,
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "Slope Index of Inequality (SII) timeseries",
    font = plotly_font_family,
    showlegend = FALSE,
    yaxis = list(
      title = "Slope Index of Inequality (SII)\n(Closer to zero is better)", 
      showgrid = FALSE, showline = FALSE, 
      rangemode = "tozero"
    ),
    xaxis = list(title = "", showgrid = FALSE, showline = FALSE)
  ) |> 
  configure_plotly()
```

There was a general trend of increasing inequality between March 2020 and March 2024, from 0.5% to 2.5%. There were three points of exceptions, a higher increase in inequality in March 2023 and a fall in inequality in June 2022 and September 2023.

There is a fall in inequality between March 2021 and June 2022 (from 1.5 to 0.6%).

The confidence intervals are much tighter in this plot than those seen in the age-standardised hypertension prevalence (see @sec-age-standardised-prevalence), indicating there is much less uncertainty about these SII estimates.

### Geography

```{r}
# expensive operation - process only if required
if (params$flag_calc_expensive_operations) {
  # prepare the data
  df_dep_icb_sii <-
    df_dep_icb |> 
    dplyr::filter(
      indicator_code == "CVDP004HYP",
      metric_category_type_name == "Deprivation quintile"
    ) |> 
    # continue with wrangling
    dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
    dplyr::summarise(
      sii = healthequal::sii(
        est = value,
        subgroup_order = subgroup_order,
        weight = denominator
      ),
      .by = c(time_period_month, time_period_name_f, area_code)
    ) |> 
    tidyr::unnest(sii) |> 
    dplyr::mutate(
      text = glue::glue(
        "<b>{time_period_name_f}</b>\n",
        "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
        "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
      )
    )
  
  # store for later use (this is an expensive operation)
  saveRDS(
    object = df_dep_icb_sii,
    file = here::here('data', 'project', 'df_dep_icb_sii_p004.Rds')
  )
}
```

```{r}
#| fig-height: 7
#| fig-cap: Geographical distribution of SII using crude rates of people with blood pressure reading record (recorded hypertension)

# wrangling ---

# read the pre-processed icb sii file
# read the pre-processed icb sii file
df_sii <-
  readRDS(
    file = here::here('data', 'project', 'df_dep_icb_sii_p004.Rds')
  ) |> 
  # sort by area code
  dplyr::arrange(area_code, time_period_name_f) |> 
  # add in ICB name
  dplyr::left_join(
    y = icb_sf |> 
      dplyr::select(
        ICB23CD,
        area_name = ICB23NM
      ) |> 
      # shorten the ICB name a little
      dplyr::mutate(
        area_name = area_name |> 
          stringr::str_replace(
            pattern = "Integrated Care Board",
            replacement = "ICB"
          )
      ),
    by = dplyr::join_by(
      area_code == ICB23CD
    )
  ) |> 
  # prepare the hover text info
  dplyr::mutate(
    hover_label = glue::glue(
      "<strong>{area_name}</strong></br>",
      "{time_period_name_f}</br>",
      "<strong>Slope Index of Inequality:</strong> {round(estimate, digits = 1)}%</br>",
      "<strong>95% Confidence Interval:</strong> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    ),
    hover_label_plotly = glue::glue(
      "<b>{area_name}</b>\n",
      "{time_period_name_f}\n",
      "<b>Slope Index of Inequality:</b> {round(estimate, digits = 1)}%\n",
      "<b>95% Confidence Interval:</b> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    )
  )

# define the colour palette for the choropleth
pal <- leaflet::colorNumeric(
  palette = "RdYlBu",
  # use a balanced set to ensure zero is the mid-point
  domain = seq(
    from = ceiling(max(abs(df_sii$estimate)))*-1,
    to = ceiling(max(abs(df_sii$estimate))),
    by = 1
  ),
  reverse = FALSE
)

# define a vector to list the layers
poly_layers <- c()

# leaflet map ---

# build the map
icb_sf |> 
  leaflet::leaflet() |> 
  add_leaflet_polygon(report_period = "To June 2022") |>
  add_leaflet_polygon(report_period = "To September 2022") |>
  add_leaflet_polygon(report_period = "To December 2022") |>
  add_leaflet_polygon(report_period = "To March 2023") |> 
  add_leaflet_polygon(report_period = "To June 2023") |> 
  add_leaflet_polygon(report_period = "To September 2023") |> 
  add_leaflet_polygon(report_period = "To December 2023") |> 
  add_leaflet_polygon(report_period = "To March 2024") |> 
  add_leaflet_polygon(report_period = "To June 2024") |>
  add_leaflet_polygon(report_period = "To September 2024") |> 
  leaflet::addLayersControl(
    baseGroups = poly_layers,
    options = leaflet::layersControlOptions(collapsed = FALSE)
  ) |> 
  leaflet::addLegend(
    pal = pal,
    values = df_sii$estimate,
    opacity = 0.7,
    title = "Key (%)",
    position = "bottomleft",
    labels = bins
  )
```

This map presents a the SII for each ICB as a snapshot by each reporting period. The colours range from red-yellow-blue, where generally:

-   red means a negative SII, which is where people with hypertension who live in areas of greater deprivation have higher rates of blood pressure reading record,

-   yellow means an SII equal to or around zero, which means greater equity of blood pressure reading record with respect to deprivation, and

-   blue means a positive SII, which is the area typically thought of as inequity of access where those who live in areas of highest deprivation have the lowest rates of blood pressure reading record (recorded hypertension).

In June 2022 there is one ICB with a strong red colour, Birmingham and Solihull ICB, indicating higher deprivation correlates with higher rates of BP reading record (recorded hypertension).

A small number of ICBs have yellow/orange colours signifying more or less equality of access.

The majority of ICBs appear to be coloured various shades of blue, indicating they have inequity in which those who live in areas of higher deprivation have lower rates of blood pressure reading record.

By March 2023 nearly all ICBs are coloured blue with a few coloured deeper blue, indicating greater inequity of access for people living in areas of highest deprivation.

In June 2024 and September 2024 the darker blue is replaced by more lighter shades indicating that inequity still exists but to a lesser extent than the peak of March 2023.


#### Focal ICBs

```{r}
#| fig-height: 60
#| fig-cap: Trend in inequality (SII) of crude rates of treatment to threshold for the focal ICBs
 
# produce a facet/subplot timeseries plots for each ICB
plot_list <-
  plot_focal_scheme_sii_timeseries(
    .df_sii = df_sii,
    .df_icb_focal = df_icb_focal
  )

# display the plot
plot_list
```

## CVDP005HYP

This metric looks at the percentage of GP registered patients aged 18 and over with a single blood pressure reading of systolic \>=140mmHg and diastolic \>=90mmHg (indicating increased risk of hypertension), but with no hypertension diagnosis (and no recorded hypertension resolution) in the GP record. The single high blood pressure reading is recorded more than 3 months prior to the audit end date.

### National trends

Breakdowns of England-wide hypertension treated to threshold as unadjusted rates are available by:

-   Gender,

-   Age group, and

-   Deprivation quintile.

::: panel-tabset
#### Overall

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of high risk – one high blood pressure (no recorded hypertension) in England

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP005HYP',
    metric_category_name == 'Persons', # get the overall value
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = "High risk – one high BP" |> forcats::fct(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{round(value, digits = 1)}% high risk – one high BP\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England high risk – one high blood pressure with no recorded hypertension (CVDP005HYP)",
    y_axis_title = "People with high risk – one high blood pressure no recorded hypertension \n(percent)"
  )
```

The main point to note from this chart is that GP hypertension with a record of a high risk – one high blood pressure with no recorded hypertension reached the highest percentage up to 2% of people aged 18+ over this period.

The trend since March 2021 is upwards, Starting at 0.6% in March 2021 and peaking at 2% in September 2024

Throughout this time-series we observe an increasing denominator over successive reporting periods, starting from 45.8 million (M) people in March 2021 to 50.15 M by September 2024.

#### Gender

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with high risk – one high blood pressure (no recorded hypertension) in England by gender

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP005HYP',
    metric_category_type_name == 'Sex',
    metric_category_name != 'Persons'
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% high risk – one high BP\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England high risk – one high blood pressure with no recorded hypertension (CVDP005HYP) - gender",
    y_axis_title = "People with high risk – one high blood pressure no recorded hypertension\n(percent)"
  )
```

The trends for each gender are broadly similar to the overall trends noted above. Men tend to have a higher crude rate of high risk – one high blood pressure than Woman for all reporting periods.

The denominators for both groups are broadly similar in each reporting period, however, there tend to be more men with hypertension than women. This fits with the national literature (see Section 2.1) that below the age of 65 years men tend to have higher blood pressure than women, with the inference than men are more likely to be diagnosed with hypertension.

#### Age

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with high risk – one high blood pressure (no recorded hypertension) in England by age group

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP005HYP',
    metric_category_type_name == 'Age group',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% high risk – one high BP\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England high risk – one high blood pressure with no recorded hypertension (CVDP005HYP) - age group",
    y_axis_title = "People with high risk – one high blood pressure no recorded hypertension \n(percent)"
  )
```

The pattern demonstrated here is not the same as previous metric which indicated that as age-group increases so too does the likelihood for hypertension,with the highest rates for the 60-79 years group, followed by the second youngest (40-59), then by the oldest group (80+) finally by the youngest group (18-39). This high risk – one high blood pressure (no recorded hypertension) seems to be different from previous findings in age group (see @sec-national-trends).it seems to be that this outcome contain people with no recorded hypertension.

Despite this small gap in high risk – one high blood pressure (no recorded hypertension) between the age groups, there are still notable differences in the denominators. In September 2024 the:

-   `18-39` age group had 19 M people in the denominator,

-   `60-79` age group had 11.81 M people in the denominator, around 60% of the `18-39` group,

-   `80+` age group had only 3.3 M people in the denominator, around 17% of the `18-39` group.

Use of the crude high risk – one high blood pressure (no recorded hypertension) rates appears to present fewer issues than it did when looking at hypertension prevalence. The age groups are much closer in their high risk – one high blood pressure (no recorded hypertension) rates which means any differences in age profile between geographical areas are less likely to result in large effects on the overall high risk – one high blood pressure (no recorded hypertension) rate for the area.

#### Deprivation

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with high risk – one high blood pressure (no recorded hypertension) in England by deprivation quintile

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP005HYP',
    metric_category_type_name == 'Deprivation quintile',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% high risk – one high BP\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England high risk – one high blood pressure with no recorded hypertension (CVDP005HYP) - deprivation",
    y_axis_title = "People with high risk – one high blood pressure no recorded hypertension \n(percent)"
  )
```

The relationship between deprivation and high risk – one high blood pressure with no recorded hypertension is more complex, for example the most deprived group does not consistently have the higher rate with Quintile 4 often being the highest. Similarly for Quntiles 5 and 2 for the lowest rates for this outcome.
:::

### Distributions over time

High risk – one high blood pressure (no recorded hypertension) rates are distributed unevenly across ICBs, with some having lower rates and others higher rates in each reporting period.

*Box-plots* provide one way to summarise distributions that allow comparisons across time, for example.

```{r}
#| fig-height: 9
#| fig-cap: Distributions of rates of people with high risk – one high blood pressure (no recorded hypertension) per ICBs over successive reporting periods

df_metrics_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP005HYP',
    metric_category_name == 'Persons', # total counts of people
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ forcats::fct_rev(time_period_name_f),
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "ICB distribution - High risk – one high blood pressure with no recorded hypertension (CVDP005HYP)",
    font = plotly_font_family,
    xaxis = list(
      title = "People with high risk – one high blood pressure no recorded hypertension (percent)", 
      rangemode = "tozero"
    ),
    yaxis = list(title = "")
  ) |> 
  configure_plotly()
```

### Deprivation breakdowns

```{r}
#| fig-height: 7

# prepare the metric data
df_dep_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP005HYP',
    metric_category_type_name == 'Deprivation quintile'
  ) |> 
  dplyr::mutate(
    time_period_name_f = time_period_name_f |> forcats::fct_drop()
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ deprivation,
    frame = ~ time_period_name_f,
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "ICB distribution - high risk – one high blood pressure with no recorded hypertension (CVDP005HYP)",
    font = plotly_font_family,
    xaxis = list(title = "blood pressure (percent)")
  ) |> 
  plotly::animation_slider(
    currentvalue = list(prefix = "", font = list(color = "black"))  
  ) |> 
  configure_plotly()
```

::: callout-note
#### Date limits

ICBs were established in the summer of 2022, replacing previous system of CCGs. As a result ICB-level data is only available from June 2022 onwards from the CVDPREVENT audit data, though it *may* be possible to construct ICB-level equivalent data based on CCG footprints to get data older than June 2022.

The decision whether to proceed with this rests on whether the additional back-dated data will be helpful in conducting the impact evaluation using techniques such as interrupted time-series analysis.
:::

### Slope Index of Inequality

The Slope Index of Inequality (SII) is a statistical measure used to assess health disparities and socio-economic inequalities within a population.

It quantifies the relationship between a health outcome and a socio-economic variable, such as deprivation, by examining how the health outcome varies across different socio-economic groups.

The SII is particularly valuable because it provides a comprehensive view of inequality by considering the entire distribution of the socio-economic variable, rather than just comparing specific groups.

To appreciate how the SII applies to this measure here is an example slope as calculated from the latest reporting time period:

```{r}
#| fig-height: 6
#| fig-cap: Inequality of crude rate of high risk – one high blood pressure with no recorded hypertension by deprivation quintile - example month

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::slice_max(order_by = time_period_month) |> 
  dplyr::filter(
    indicator_code == "CVDP005HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(
    subgroup_order = as.numeric(deprivation),
    deprivation_text = glue::glue(
      "Deprivation quintile {as.numeric(deprivation)}"
    ),
    text = glue::glue(
      "<b>{deprivation_text}</b>\n",
      "{time_period_name}\n",
      "Prevalence: {round(value, digits = 1)}% ",
      "(95% CI: {round(lower_confidence_limit, digits = 2)}% to {round(upper_confidence_limit, digits = 2)}%)"
    )
  ) |> 
  dplyr::arrange(subgroup_order)

# calculate the sii
df_sii <-
  df |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      pop = denominator,
      subgroup_order = subgroup_order
    )
  ) |> 
  tidyr::unnest(sii)

# fit a lm for the linear regression
fit <- lm(value ~ as.numeric(deprivation), data = df)

# plot values by deprivation and simulate sii
df |> 
  plotly::plot_ly(
    x = ~ deprivation
  ) |> 
  plotly::add_segments(
    name = "95% Confidence Interval",
    x = ~ deprivation, xend = ~ deprivation,
    y = ~ lower_confidence_limit, yend = ~ upper_confidence_limit,
    line = list(color = adjustcolor("#abc0e0", alpha.f = 0.3), width = 5),
    hovertemplate = ""
  ) |> 
  plotly::add_trace(
    name = "Rate",
    y = ~ value,
    type = "scatter",
    mode = "markers",
    marker = list(size = 10, color = "#abc0e0"),
    hovertemplate = ~ text
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = fitted(fit),
    type = "scatter",
    mode = "lines",
    line = list(color = "#abc0e0", dash = "dot"),
    hovertemplate = glue::glue("SII: {fitted(fit)}")
  ) |> 
  plotly::add_annotations(
    x = ~ 3,
    y = ~ 1.5,
    text = glue::glue("<b>Slope Index of Inequality</b>\n{round(df_sii$estimate, digits = 1)}%"),
    showarrow = FALSE
  ) |> 
  plotly::layout(
    title = "Crude high risk – one high blood pressure with no recorded hypertension - September 2024",
    font = plotly_font_family,
    legend = list(orientation = "h"),
    xaxis = list(title = ""),
    yaxis = list(
      title = "People with high risk – one high blood pressure no recorded hypertension\n(percent)",
      rangemode = "tozero"
    )
  ) |> 
  configure_plotly()
```

```{r}
#| fig-height: 6
#| fig-cap: Trend in inequality (SII) of crude rates of high risk – one high blood pressure with no recorded hypertension 

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::filter(
    indicator_code == "CVDP005HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      subgroup_order = subgroup_order,
      weight = denominator
    ),
    .by = c(time_period_month, time_period_name_f)
  ) |> 
  tidyr::unnest(sii) |> 
  dplyr::mutate(
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
      "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
    )
  )
    
# plot the sii over time
df |> 
  plotly::plot_ly(
    x = ~ time_period_month
  ) |> 
  plotly::add_trace(
    name = "Upper CI",
    y = ~ upperci,
    type = "scatter",
    mode = "lines",
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "Lower CI",
    y = ~ lowerci,
    type = "scatter",
    mode = "lines",
    fill = "tonexty",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.2),
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = ~ estimate,
    type = "scatter",
    mode = "lines+markers",
    hovertemplate = ~ text,
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "Slope Index of Inequality (SII) timeseries",
    font = plotly_font_family,
    showlegend = FALSE,
    yaxis = list(
      title = "Slope Index of Inequality (SII)\n(Closer to zero is better)", 
      showgrid = FALSE, showline = FALSE, 
      rangemode = "tozero"
    ),
    xaxis = list(title = "", showgrid = FALSE, showline = FALSE)
  ) |> 
  configure_plotly()
```

There was a general trend of increasing inequality between March 2020 and March 2024, from -0.1% to 0. The points were center closely around 0 but it starting to get further from June 2024 to September 2024

The confidence intervals are much tighter in this plot than those seen in the age-standardised hypertension prevalence (see @sec-age-standardised-prevalence), indicating there is much less uncertainty about these SII estimates.

### Geography

```{r}
# expensive operation - process only if required
if (params$flag_calc_expensive_operations) {
  # prepare the data
  df_dep_icb_sii <-
    df_dep_icb |> 
    dplyr::filter(
      indicator_code == "CVDP005HYP",
      metric_category_type_name == "Deprivation quintile"
    ) |> 
    # continue with wrangling
    dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
    dplyr::summarise(
      sii = healthequal::sii(
        est = value,
        subgroup_order = subgroup_order,
        weight = denominator
      ),
      .by = c(time_period_month, time_period_name_f, area_code)
    ) |> 
    tidyr::unnest(sii) |> 
    dplyr::mutate(
      text = glue::glue(
        "<b>{time_period_name_f}</b>\n",
        "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
        "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
      )
    )
  
  # store for later use (this is an expensive operation)
  saveRDS(
    object = df_dep_icb_sii,
    file = here::here('data', 'project', 'df_dep_icb_sii_p005.Rds')
  )
}
```

```{r}
#| fig-height: 7
#| fig-cap: Geographical distribution of SII using crude rates of people with high risk – one high blood pressure with no recorded hypertension 

# wrangling ---

# read the pre-processed icb sii file
# read the pre-processed icb sii file
df_sii <-
  readRDS(
    file = here::here('data', 'project', 'df_dep_icb_sii_p005.Rds')
  ) |> 
  # sort by area code
  dplyr::arrange(area_code, time_period_name_f) |> 
  # add in ICB name
  dplyr::left_join(
    y = icb_sf |> 
      dplyr::select(
        ICB23CD,
        area_name = ICB23NM
      ) |> 
      # shorten the ICB name a little
      dplyr::mutate(
        area_name = area_name |> 
          stringr::str_replace(
            pattern = "Integrated Care Board",
            replacement = "ICB"
          )
      ),
    by = dplyr::join_by(
      area_code == ICB23CD
    )
  ) |> 
  # prepare the hover text info
  dplyr::mutate(
    hover_label = glue::glue(
      "<strong>{area_name}</strong></br>",
      "{time_period_name_f}</br>",
      "<strong>Slope Index of Inequality:</strong> {round(estimate, digits = 1)}%</br>",
      "<strong>95% Confidence Interval:</strong> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    ),
    hover_label_plotly = glue::glue(
      "<b>{area_name}</b>\n",
      "{time_period_name_f}\n",
      "<b>Slope Index of Inequality:</b> {round(estimate, digits = 1)}%\n",
      "<b>95% Confidence Interval:</b> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    )
  )

# define the colour palette for the choropleth
pal <- leaflet::colorNumeric(
  palette = "RdYlBu",
  # use a balanced set to ensure zero is the mid-point
  domain = seq(
    from = ceiling(max(abs(df_sii$estimate)))*-1,
    to = ceiling(max(abs(df_sii$estimate))),
    by = 1
  ),
  reverse = FALSE
)

# define a vector to list the layers
poly_layers <- c()

# leaflet map ---

# build the map
icb_sf |> 
  leaflet::leaflet() |> 
  add_leaflet_polygon(report_period = "To June 2022") |>
  add_leaflet_polygon(report_period = "To September 2022") |>
  add_leaflet_polygon(report_period = "To December 2022") |>
  add_leaflet_polygon(report_period = "To March 2023") |> 
  add_leaflet_polygon(report_period = "To June 2023") |> 
  add_leaflet_polygon(report_period = "To September 2023") |> 
  add_leaflet_polygon(report_period = "To December 2023") |> 
  add_leaflet_polygon(report_period = "To March 2024") |> 
  add_leaflet_polygon(report_period = "To June 2024") |>
  add_leaflet_polygon(report_period = "To September 2024") |> 
  leaflet::addLayersControl(
    baseGroups = poly_layers,
    options = leaflet::layersControlOptions(collapsed = FALSE)
  ) |> 
  leaflet::addLegend(
    pal = pal,
    values = df_sii$estimate,
    opacity = 0.7,
    title = "Key (%)",
    position = "bottomleft",
    labels = bins
  )
```

This map presents a the SII for each ICB as a snapshot by each reporting period. The colours range from red-yellow-blue, where generally:

-   red means a negative SII, which is where people with hypertension who live in areas of greater deprivation have higher rates of high risk – one high blood pressure (no recorded hypertension) ,

-   yellow means an SII equal to or around zero, which means greater equity of high risk – one high blood pressure (no recorded hypertension) with respect to deprivation, and

-   blue means a positive SII, which is the area typically thought of as inequity of access where those who live in areas of highest deprivation have the lowest rates of high risk – one high blood pressure (no recorded hypertension).

In June 2022 there is one ICB with an orange colour, Cambridgeshire and Peterborough ICB, indicating higher deprivation correlates with higher rates of high risk – one high blood pressure (no recorded hypertension) .

A small number of ICBs have yellow/light orange colours signifying more or less equality of access.

The majority of ICBs appear to be coloured various shades of yellow, indicating they have greater equity of high risk – one high blood pressure (no recorded hypertension) with respect to deprivation.

By March 2023 nearly all ICBs have no significant improvement compared the previous year.

In June 2024 and September 2024 the light yellow is replaced by more darker shades including orange indicating that inequity has become wider compared to March 2023.

#### Focal ICBs

```{r}
#| fig-height: 60
#| fig-cap: Trend in inequality (SII) of crude rates of treatment to threshold for the focal ICBs
 
# produce a facet/subplot timeseries plots for each ICB
plot_list <-
  plot_focal_scheme_sii_timeseries(
    .df_sii = df_sii,
    .df_icb_focal = df_icb_focal
  )

# display the plot
plot_list
```

## CVDP006HYP

This metric looks at the percentage of patients 18 and over with GP recorded hypertension, prescribed antihypertensive medication in whom the last systolic blood pressure (BP) reading was low (\<=100mmHg) who have been prescribed antihypertensive medications after the date of the low systolic BP value. The low blood pressure reading is recorded in the preceding 12 months.

### National trends

Breakdowns of England-wide hypertension potential antihypertensive overtreatment as unadjusted rates are available by:

-   Gender,

-   Age group,

-   Deprivation quintile,

-   Broad ethnic group,

-   People with or without a Learning Disability (LD), and

-   People with or without a Serious Mental Illness (SMI).

::: panel-tabset
#### Overall

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of potential antihypertensive overtreatment in England

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP006HYP',
    metric_category_name == 'Persons', # get the overall value
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = "potential antihypertensive overtreatment" |> forcats::fct(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{round(value, digits = 1)}% potential antihypertensive overtreatment\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England potential antihypertensive overtreatment (CVDP006HYP)",
    y_axis_title = "People with potential antihypertensive overtreatment\n(percent)"
  )
```

The main point to note from this chart is that potential antihypertensive overtreatment reached the highest percentage up to 0.5% of people aged 18+ over this period.

The trend since March 2021 is upwards, Starting at 0.3% in March 2021 and peaking at 0.5% in September 2024

Throughout this time-series we observe an increasing denominator over successive reporting periods, starting from 7.23 million (M) people in March 2021 to 9.03 M by September 2024.

#### Gender

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with potential antihypertensive overtreatment in England by gender

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP006HYP',
    metric_category_type_name == 'Sex',
    metric_category_name != 'Persons'
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% potential antihypertensive overtreatment\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England potential antihypertensive overtreatment (CVDP006HYP) - gender",
    y_axis_title = "People with potential antihypertensive overtreatment\n(percent)"
  )
```

The trends for each gender are broadly similar to the overall trends noted above. Men tend to have a higher crude rate of potential antihypertensive overtreatment than woman for all reporting periods.

The denominators for both groups are broadly similar in each reporting period, however, there tend to be more men with hypertension than women. This fits with the national literature (see Section 2.1) that below the age of 65 years men tend to have higher blood pressure than women, with the inference than men are more likely to be diagnosed with hypertension.

#### Age

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with potential antihypertensive overtreatment in England by age group

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP006HYP',
    metric_category_type_name == 'Age group',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% potential antihypertensive overtreatment\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England potential antihypertensive overtreatment (CVDP006HYP) - age group",
    y_axis_title = "People with potential antihypertensive overtreatment\n(percent)"
  )
```

There is a clear pattern demonstrated here that as age-group increases so too does the likelihood for potential antihypertensive overtreatment within limits. However, this relationship is not so nearly as strong as that observed between hypertension prevalence and age group (see @sec-national-trends).

Despite this narrower gap in potential antihypertensive overtreatmentrate between the age groups except 80+, there are still notable differences in the denominators. In September 2024 the:

-   `60-79` age group had 4.73 M people in the denominator,

-   `40-59` age group had 2.21 M people in the denominator, around half of the `60-79` group,

-   `18-39` age group had only 0.22 M people in the denominator, around 4% of the `60-79` group.

Use of the crude potential antihypertensive overtreatment rates appears to present fewer issues than it did when looking at hypertension prevalence. The age groups are much closer in their potential antihypertensive overtreatmentrates which means any differences in age profile between geographical areas are less likely to result in large effects on the overall potential antihypertensive overtreatment rate for the area.

#### Ethnicity

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with potential antihypertensive overtreatment in England by ethnicity

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP006HYP',
    metric_category_type_name == 'Ethnicity',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% potential antihypertensive overtreatment\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England potential antihypertensive overtreatment (CVDP006HYP) - broad ethnic group",
    y_axis_title = "People with potential antihypertensive overtreatment\n(percent)"
  )
```

The relationship between ethnicity and potential antihypertensive overtreatment is not clear from this visualisation.

There are disparities with some groups recording consistently lower rates, such as people with a `Black` broad ethnic background as well as those whose ethnicity is `Missing` from their GP record, in contrast to people of `Asian` or `White` broad ethnic backgrounds who generally appear to achieve higher rates of treatment to threshold.

#### Deprivation

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with potential antihypertensive overtreatment in England by deprivation quintile

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP006HYP',
    metric_category_type_name == 'Deprivation quintile',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% potential antihypertensive overtreatment\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England potential antihypertensive overtreatment (CVDP006HYP) - deprivation",
    y_axis_title = "People with potential antihypertensive overtreatment\n(percent)"
  )
```

There is a clear relationship between deprivation quintile and potential antihypertensive overtreatment. People living in areas of higher deprivation consistently achieve lower rates of potential antihypertensive overtreatment compared with those living in areas of least deprivation.

Moreover, there appears to be a step-wise correlation between deprivation quintile and potential antihypertensive overtreatment, with people living in areas of higher deprivation less likely to achieve potential antihypertensive overtreatment.

#### SMI

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with potential antihypertensive overtreatment in England by mental health status

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP006HYP',
    metric_category_type_name == 'Mental Health',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% potential antihypertensive overtreatment\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England potential antihypertensive overtreatment (CVDP006HYP) - SMI",
    y_axis_title = "People with potential antihypertensive overtreatment\n(percent)"
  )
```

There are only three reporting periods available for this relatively new metric, introduced in March 2024.

It appears that people with a Serious Mental Illness are more likely to receive potential antihypertensive overtreatment than people without, (1% vs 0.5%, September 2024). However, the denominators show that there are far fewer people with SMI (131.50 k) than those without (8.9 M).

#### LD

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people with potential antihypertensive overtreatment in England by mental learning disability status

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP006HYP',
    metric_category_type_name == 'Learning Disability',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% potential antihypertensive overtreatment\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England potential antihypertensive overtreatment (CVDP006HYP) - LD",
    y_axis_title = "People with potential antihypertensive overtreatment\n(percent)"
  )
```

This metric was introduced in June 2023 illustrates that people with potential antihypertensive overtreatment who also have a Learning Disability are more likely to achieve potential antihypertensive overtreatment than those without (1.1% vs 0.5%, September 2024).
:::

### Distributions over time

potential antihypertensive overtreatment rates are distributed unevenly across ICBs, with some having lower rates and others higher rates in each reporting period.

*Box-plots* provide one way to summarise distributions that allow comparisons across time, for example.

```{r}
#| fig-height: 9
#| fig-cap: Distributions of rates of people with high risk – one high blood pressure (no recorded hypertension) per ICBs over successive reporting periods

df_metrics_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP006HYP',
    metric_category_name == 'Persons', # total counts of people
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ forcats::fct_rev(time_period_name_f),
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "ICB distribution - potential antihypertensive overtreatment (CVDP006HYP)",
    font = plotly_font_family,
    xaxis = list(
      title = "People with potential antihypertensive overtreatment (percent)", 
      rangemode = "tozero"
    ),
    yaxis = list(title = "")
  ) |> 
  configure_plotly()
```

### Deprivation breakdowns

```{r}
#| fig-height: 7

# prepare the metric data
df_dep_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP006HYP',
    metric_category_type_name == 'Deprivation quintile'
  ) |> 
  dplyr::mutate(
    time_period_name_f = time_period_name_f |> forcats::fct_drop()
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ deprivation,
    frame = ~ time_period_name_f,
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "ICB distribution - potential antihypertensive overtreatment (CVDP006HYP)",
    font = plotly_font_family,
    xaxis = list(title = "blood pressure (percent)")
  ) |> 
  plotly::animation_slider(
    currentvalue = list(prefix = "", font = list(color = "black"))  
  ) |> 
  configure_plotly()
```

::: callout-note
#### Date limits

ICBs were established in the summer of 2022, replacing previous system of CCGs. As a result ICB-level data is only available from June 2022 onwards from the CVDPREVENT audit data, though it *may* be possible to construct ICB-level equivalent data based on CCG footprints to get data older than June 2022.

The decision whether to proceed with this rests on whether the additional back-dated data will be helpful in conducting the impact evaluation using techniques such as interrupted time-series analysis.
:::

### Slope Index of Inequality

The Slope Index of Inequality (SII) is a statistical measure used to assess health disparities and socio-economic inequalities within a population.

It quantifies the relationship between a health outcome and a socio-economic variable, such as deprivation, by examining how the health outcome varies across different socio-economic groups.

The SII is particularly valuable because it provides a comprehensive view of inequality by considering the entire distribution of the socio-economic variable, rather than just comparing specific groups.

To appreciate how the SII applies to this measure here is an example slope as calculated from the latest reporting time period:

```{r}
#| fig-height: 6
#| fig-cap: Inequality of crude rate of potential antihypertensive overtreatment by deprivation quintile - example month

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::slice_max(order_by = time_period_month) |> 
  dplyr::filter(
    indicator_code == "CVDP006HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(
    subgroup_order = as.numeric(deprivation),
    deprivation_text = glue::glue(
      "Deprivation quintile {as.numeric(deprivation)}"
    ),
    text = glue::glue(
      "<b>{deprivation_text}</b>\n",
      "{time_period_name}\n",
      "Prevalence: {round(value, digits = 1)}% ",
      "(95% CI: {round(lower_confidence_limit, digits = 2)}% to {round(upper_confidence_limit, digits = 2)}%)"
    )
  ) |> 
  dplyr::arrange(subgroup_order)

# calculate the sii
df_sii <-
  df |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      pop = denominator,
      subgroup_order = subgroup_order
    )
  ) |> 
  tidyr::unnest(sii)

# fit a lm for the linear regression
fit <- lm(value ~ as.numeric(deprivation), data = df)

# plot values by deprivation and simulate sii
df |> 
  plotly::plot_ly(
    x = ~ deprivation
  ) |> 
  plotly::add_segments(
    name = "95% Confidence Interval",
    x = ~ deprivation, xend = ~ deprivation,
    y = ~ lower_confidence_limit, yend = ~ upper_confidence_limit,
    line = list(color = adjustcolor("#abc0e0", alpha.f = 0.3), width = 5),
    hovertemplate = ""
  ) |> 
  plotly::add_trace(
    name = "Rate",
    y = ~ value,
    type = "scatter",
    mode = "markers",
    marker = list(size = 10, color = "#abc0e0"),
    hovertemplate = ~ text
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = fitted(fit),
    type = "scatter",
    mode = "lines",
    line = list(color = "#abc0e0", dash = "dot"),
    hovertemplate = glue::glue("SII: {fitted(fit)}")
  ) |> 
  plotly::add_annotations(
    x = ~ 3,
    y = ~ 1.5,
    text = glue::glue("<b>Slope Index of Inequality</b>\n{round(df_sii$estimate, digits = 1)}%"),
    showarrow = FALSE
  ) |> 
  plotly::layout(
    title = "Crude potential antihypertensive overtreatment - September 2024",
    font = plotly_font_family,
    legend = list(orientation = "h"),
    xaxis = list(title = ""),
    yaxis = list(
      title = "People with potential antihypertensive overtreatment\n(percent)",
      rangemode = "tozero"
    )
  ) |> 
  configure_plotly()
```

```{r}
#| fig-height: 6
#| fig-cap: Trend in inequality (SII) of crude rates of potential antihypertensive overtreatment

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::filter(
    indicator_code == "CVDP006HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      subgroup_order = subgroup_order,
      weight = denominator
    ),
    .by = c(time_period_month, time_period_name_f)
  ) |> 
  tidyr::unnest(sii) |> 
  dplyr::mutate(
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
      "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
    )
  )
    
# plot the sii over time
df |> 
  plotly::plot_ly(
    x = ~ time_period_month
  ) |> 
  plotly::add_trace(
    name = "Upper CI",
    y = ~ upperci,
    type = "scatter",
    mode = "lines",
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "Lower CI",
    y = ~ lowerci,
    type = "scatter",
    mode = "lines",
    fill = "tonexty",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.2),
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = ~ estimate,
    type = "scatter",
    mode = "lines+markers",
    hovertemplate = ~ text,
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "Slope Index of Inequality (SII) timeseries",
    font = plotly_font_family,
    showlegend = FALSE,
    yaxis = list(
      title = "Slope Index of Inequality (SII)\n(Closer to zero is better)", 
      showgrid = FALSE, showline = FALSE, 
      rangemode = "tozero"
    ),
    xaxis = list(title = "", showgrid = FALSE, showline = FALSE)
  ) |> 
  configure_plotly()
```

There was a general flat trend of inequality between March 2021 and September 2024.The points were consistently showing -0.1 overtime.However, a little improvement was observed in September 2022 before it decrease again.

The confidence intervals are much tighter in this plot than those seen in the age-standardised hypertension prevalence (see @sec-age-standardised-prevalence), indicating there is much less uncertainty about these SII estimates.

### Geography

```{r}
# expensive operation - process only if required
if (params$flag_calc_expensive_operations) {
  # prepare the data
  df_dep_icb_sii <-
    df_dep_icb |> 
    dplyr::filter(
      indicator_code == "CVDP006HYP",
      metric_category_type_name == "Deprivation quintile"
    ) |> 
    # continue with wrangling
    dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
    dplyr::summarise(
      sii = healthequal::sii(
        est = value,
        subgroup_order = subgroup_order,
        weight = denominator,
        force = TRUE
      ),
      .by = c(time_period_month, time_period_name_f, area_code)
    ) |> 
    tidyr::unnest(sii) |> 
    dplyr::mutate(
      text = glue::glue(
        "<b>{time_period_name_f}</b>\n",
        "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
        "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
      )
    )
  
  # store for later use (this is an expensive operation)
  saveRDS(
    object = df_dep_icb_sii,
    file = here::here('data', 'project', 'df_dep_icb_sii_p006.Rds')
  )
}
```

```{r}
#| fig-height: 7
#| fig-cap: Geographical distribution of SII using crude rates of people with potential antihypertensive overtreatment

# wrangling ---

# read the pre-processed icb sii file
# read the pre-processed icb sii file
df_sii <-
  readRDS(
    file = here::here('data', 'project', 'df_dep_icb_sii_p006.Rds')
  ) |> 
  # sort by area code
  dplyr::arrange(area_code, time_period_name_f) |> 
  # add in ICB name
  dplyr::left_join(
    y = icb_sf |> 
      dplyr::select(
        ICB23CD,
        area_name = ICB23NM
      ) |> 
      # shorten the ICB name a little
      dplyr::mutate(
        area_name = area_name |> 
          stringr::str_replace(
            pattern = "Integrated Care Board",
            replacement = "ICB"
          )
      ),
    by = dplyr::join_by(
      area_code == ICB23CD
    )
  ) |> 
  # prepare the hover text info
  dplyr::mutate(
    hover_label = glue::glue(
      "<strong>{area_name}</strong></br>",
      "{time_period_name_f}</br>",
      "<strong>Slope Index of Inequality:</strong> {round(estimate, digits = 1)}%</br>",
      "<strong>95% Confidence Interval:</strong> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    ),
    hover_label_plotly = glue::glue(
      "<b>{area_name}</b>\n",
      "{time_period_name_f}\n",
      "<b>Slope Index of Inequality:</b> {round(estimate, digits = 1)}%\n",
      "<b>95% Confidence Interval:</b> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    )
  )

# define the colour palette for the choropleth
pal <- leaflet::colorNumeric(
  palette = "RdYlBu",
  # use a balanced set to ensure zero is the mid-point
  domain = seq(
    from = ceiling(max(abs(df_sii$estimate)))*-1,
    to = ceiling(max(abs(df_sii$estimate))),
    by = 1
  ),
  reverse = FALSE
)

# define a vector to list the layers
poly_layers <- c()

# leaflet map ---

# build the map
icb_sf |> 
  leaflet::leaflet() |> 
  add_leaflet_polygon(report_period = "To June 2022") |>
  add_leaflet_polygon(report_period = "To September 2022") |>
  add_leaflet_polygon(report_period = "To December 2022") |>
  add_leaflet_polygon(report_period = "To March 2023") |> 
  add_leaflet_polygon(report_period = "To June 2023") |> 
  add_leaflet_polygon(report_period = "To September 2023") |> 
  add_leaflet_polygon(report_period = "To December 2023") |> 
  add_leaflet_polygon(report_period = "To March 2024") |> 
  add_leaflet_polygon(report_period = "To June 2024") |>
  add_leaflet_polygon(report_period = "To September 2024") |> 
  leaflet::addLayersControl(
    baseGroups = poly_layers,
    options = leaflet::layersControlOptions(collapsed = FALSE)
  ) |> 
  leaflet::addLegend(
    pal = pal,
    values = df_sii$estimate,
    opacity = 0.7,
    title = "Key (%)",
    position = "bottomleft",
    labels = bins
  )
```

This map presents a the SII for each ICB as a snapshot by each reporting period. The colours range from red-yellow-blue, where generally:

-   red means a negative SII, which is where people with hypertension who live in areas of greater deprivation have higher rates of potential antihypertensive overtreatment ,

-   yellow means an SII equal to or around zero, which means greater equity of potential antihypertensive overtreatment with respect to deprivation, and

-   blue means a positive SII, which is the area typically thought of as inequity of access where those who live in areas of highest deprivation have the lowest rates of potential antihypertensive overtreatment.

In June 2022 there were four ICB with an orange colour, indicating higher deprivation correlates with greater equity of potential antihypertensive overtreatment .

A small number of ICBs have yellow/light orange colours signifying more or less equality of access.

The majority of ICBs appear to be coloured various shades of yellow, indicating they have still great equity of potential antihypertensive overtreatment) with respect to deprivation.

By March 2023 nearly all ICBs have no significant improvement compared the previous year but the orange colour dominated the area in the north of England.

In June 2024 and September 2024 the colour is still the same like March 2023 indicating that the inequity has not dissapear after a year .

#### Focal ICBs

```{r}
#| fig-height: 60
#| fig-cap: Trend in inequality (SII) of crude rates of treatment to threshold for the focal ICBs
 
# produce a facet/subplot timeseries plots for each ICB
plot_list <-
  plot_focal_scheme_sii_timeseries(
    .df_sii = df_sii,
    .df_icb_focal = df_icb_focal
  )

# display the plot
plot_list
```

## CVDP007HYP

This metric looks at the percentage of patients aged 18 and over with GP recorded hypertension, in whom the last clinic blood pressure (BP) or equivalent home or ambulatory blood pressure reading (measured in the preceding 12 months), is to the age and setting appropriate treatment threshold.

The age appropriate treatment thresholds used in this indicator are different depending on whether the latest BP reading is performed in a clinic or are a home or ambulatory BP reading. The thresholds are defined below:

Clinic blood pressure reading • Patients aged 79 and under \<=140/90mmHg • Patients aged 80 and over \<=150/90mmHg

Home or ambulatory blood pressure reading • Patients aged 79 and under \<=135/85mmHg • Patients aged 80 and over \<=145/85mmHg

Breakdowns of England-wide hypertension treated to threshold as unadjusted rates are available by:

-   Gender,

-   Age group,

-   Deprivation quintile,

-   Broad ethnic group,

-   People with or without a Learning Disability (LD), and

-   People with or without a Serious Mental Illness (SMI).

::: panel-tabset
#### Overall

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of treated to appropriate threshold (18+) in England

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP007HYP',
    metric_category_name == 'Persons', # get the overall value
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = "treated to appropriate threshold" |> forcats::fct(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{round(value, digits = 1)}% treated to appropriate threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England treated to appropriate threshold (18+) (CVDP007HYP)",
    y_axis_title = "People with treated to appropriate threshold\n(percent)"
  )
```

The main point to note from this chart is that GP hypertension treated to appropriate threshold reached the highest percentage up to 70.9% of people aged 18+ over this period.

The trend since March 2022 is upwards, Starting at 60% in March 2022 and peaking at 70.9% in March 2024

Throughout this time-series we observe an increasing denominator over successive reporting periods, starting from 7.46 million (M) people in March 2022 to 8.95 M by September 2024.

#### Gender

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people treated to appropriate threshold (18+) in England by gender

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP007HYP',
    metric_category_type_name == 'Sex',
    metric_category_name != 'Persons'
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to appropriate threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England treated to appropriate threshold (18+) (CVDP007HYP) - gender",
    y_axis_title = "People treated to appropriate threshold\n(percent)"
  )
```

The trends for each gender are broadly similar to the overall trends noted above. Women tend to have a higher crude rate of treated to appropriate threshold than Woman for all reporting periods.

The denominators for both groups are broadly similar in each reporting period, however, there tend to be more women with hypertension than men. This does not fit with the national literature (see Section 2.1) that below the age of 65 years men tend to have higher blood pressure than women, with the inference than men are more likely to be diagnosed with hypertension.

#### Age

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people treated to appropriate threshold in England by age group

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP007HYP',
    metric_category_type_name == 'Age group',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to appropriate threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England treated to appropriate threshold (18+) (CVDP007HYP) - age group",
    y_axis_title = "treated to appropriate threshold\n(percent)"
  )
```

There is a clear pattern demonstrated here that as age-group increases so too does the likelihood for potential treated to appropriate threshold within limits. However, this relationship is not so nearly as strong as that observed between hypertension prevalence and age group (see @sec-national-trends).

Despite this narrower gap in treated to appropriate threshold between the age groups, there are still notable differences in the denominators. In September 2024 the:

-   `60-79` age group had 4.69 M people in the denominator,

-   `40-59` age group had 2.18 M people in the denominator, around half of the `60-79` group,

-   `18-39` age group had only 0.21 M people in the denominator, around 4% of the `60-79` group.

Use of the crude treated to appropriate threshold rates appears to present fewer issues than it did when looking at hypertension prevalence. The age groups are much closer in their treated to appropriate thresholdwhich means any differences in age profile between geographical areas are less likely to result in large effects on the overall treated to appropriate threshold rate for the area.

#### Ethnicity

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people treated to appropriate threshold (18+) in England by ethnicity

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP007HYP',
    metric_category_type_name == 'Ethnicity',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% high risk – one high BP\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England  treated to appropriate threshold (18+) (CVDP005HYP) - broad ethnic group",
    y_axis_title = "People treated to appropriate threshold\n(percent)"
  )
```

The relationship between ethnicity and treated to appropriate threshold is not clear from this visualisation.

There are disparities with some groups recording consistently lower rates, such as people with a `Black` broad ethnic background as well as those whose ethnicity is `Missing` from their GP record or who refused to provide this information for their GP record (`Not stated`), in contrast to people of `Asian` or `White` broad ethnic backgrounds who generally appear to achieve higher rates of treated to appropriate threshold.

#### Deprivation

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people  treated to appropriate threshold (18+) in England by deprivation quintile

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP007HYP',
    metric_category_type_name == 'Deprivation quintile',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to appropriate threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England  treated to appropriate threshold 18+ (CVDP007HYP) - deprivation",
    y_axis_title = "People treated to appropriate threshold \n(percent)"
  )
```

There is a clear relationship between deprivation quintile and treated to appropriate threshold. People living in areas of higher deprivation consistently achieve lower rates of treatment to threshold compared with those living in areas of least deprivation.

Moreover, there appears to be a step-wise correlation between deprivation quintile and treatment to threshold, with people living in areas of higher deprivation less likely to achieve treated to appropriate threshold.

#### SMI

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people  treated to appropriate threshold (18+) in England by mental health status

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP007HYP',
    metric_category_type_name == 'Mental Health',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to appropriate threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England  treated to appropriate threshold 18+ (CVDP007HYP) - SMI",
    y_axis_title = "People treated to appropriate threshold\n(percent)"
  )
```

There are only three reporting periods available for this relatively new metric, introduced in March 2024.

It appears that people with a Serious Mental Illness are more likely to be treated to appropriate threshold without, (68.6% vs 66.8%, September 2024). However, the denominators show that there are far fewer people with SMI (0.13 M) than those without (8.8 M).

#### LD

```{r}
#| fig-height: 8
#| fig-cap: Timeseries of the rate of people  treated to appropriate threshold (18+) in England by mental learning disability status

# prepare the data for plotting
df <-
  df_metrics_eng |> 
  # limit to metric and overall measure
  dplyr::filter(
    indicator_code == 'CVDP007HYP',
    metric_category_type_name == 'Learning Disability',
    category_attribute == 'Persons' # don't have separate genders
  ) |> 
  dplyr::mutate(
    # how should the series be defined?
    series = metric_category_name |> forcats::fct_drop(),
    # create hovertext
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "{series}\n",
      "{round(value, digits = 1)}% treated to appropriate threshold\n",
      "Numerator: {prettyunits::pretty_num(numerator)}\n",
      "Denominator: {prettyunits::pretty_num(denominator)}"
    )
  ) |> 
  dplyr::group_by(series)

# plot the result
df |> 
  plot_timeseries(
    plot_title = "England  treated to appropriate threshold 18+ (CVDP007HYP) - LD",
    y_axis_title = "People treated to appropriate threshold\n(percent)"
  )
```

This metric was introduced in June 2023 illustrates that people with hypertension who also have a Learning Disability are more likely to achieve treated to appropriate threshold than those without (70.7% vs 66.8%, September 2024).
:::

### Distributions over time

treated to appropriate threshold rates are distributed unevenly across ICBs, with some having lower rates and others higher rates in each reporting period.

*Box-plots* provide one way to summarise distributions that allow comparisons across time, for example.

```{r}
#| fig-height: 9
#| fig-cap: Distributions of rates of people  treated to appropriate threshold (18+) per ICBs over successive reporting periods

df_metrics_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP007HYP',
    metric_category_name == 'Persons', # total counts of people
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ forcats::fct_rev(time_period_name_f),
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "ICB distribution -  treated to appropriate threshold 18+ (CVDP007HYP)",
    font = plotly_font_family,
    xaxis = list(
      title = "People treated to appropriate threshold (percent)", 
      rangemode = "tozero"
    ),
    yaxis = list(title = "")
  ) |> 
  configure_plotly()
```

### Deprivation breakdowns

```{r}
#| fig-height: 7

# prepare the metric data
df_dep_icb |> 
  dplyr::filter(
    indicator_code == 'CVDP007HYP',
    metric_category_type_name == 'Deprivation quintile'
  ) |> 
  dplyr::mutate(
    time_period_name_f = time_period_name_f |> forcats::fct_drop()
  ) |> 
  plotly::plot_ly(
    x = ~ value,
    y = ~ deprivation,
    frame = ~ time_period_name_f,
    type = "box",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.5),
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "ICB distribution - treated to appropriate threshold 18+ (CVDP007HYP)",
    font = plotly_font_family,
    xaxis = list(title = "treated to appropriate threshold (percent)")
  ) |> 
  plotly::animation_slider(
    currentvalue = list(prefix = "", font = list(color = "black"))  
  ) |> 
  configure_plotly()
```

::: callout-note
#### Date limits

ICBs were established in the summer of 2022, replacing previous system of CCGs. As a result ICB-level data is only available from June 2022 onwards from the CVDPREVENT audit data, though it *may* be possible to construct ICB-level equivalent data based on CCG footprints to get data older than June 2022.

The decision whether to proceed with this rests on whether the additional back-dated data will be helpful in conducting the impact evaluation using techniques such as interrupted time-series analysis.
:::

### Slope Index of Inequality

The Slope Index of Inequality (SII) is a statistical measure used to assess health disparities and socio-economic inequalities within a population.

It quantifies the relationship between a health outcome and a socio-economic variable, such as deprivation, by examining how the health outcome varies across different socio-economic groups.

The SII is particularly valuable because it provides a comprehensive view of inequality by considering the entire distribution of the socio-economic variable, rather than just comparing specific groups.

To appreciate how the SII applies to this measure here is an example slope as calculated from the latest reporting time period:

```{r}
#| fig-height: 6
#| fig-cap: Inequality of crude rate of treated to appropriate threshold (18+) by deprivation quintile - example month

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::slice_max(order_by = time_period_month) |> 
  dplyr::filter(
    indicator_code == "CVDP007HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(
    subgroup_order = as.numeric(deprivation),
    deprivation_text = glue::glue(
      "Deprivation quintile {as.numeric(deprivation)}"
    ),
    text = glue::glue(
      "<b>{deprivation_text}</b>\n",
      "{time_period_name}\n",
      "Prevalence: {round(value, digits = 1)}% ",
      "(95% CI: {round(lower_confidence_limit, digits = 2)}% to {round(upper_confidence_limit, digits = 2)}%)"
    )
  ) |> 
  dplyr::arrange(subgroup_order)

# calculate the sii
df_sii <-
  df |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      pop = denominator,
      subgroup_order = subgroup_order
    )
  ) |> 
  tidyr::unnest(sii)

# fit a lm for the linear regression
fit <- lm(value ~ as.numeric(deprivation), data = df)

# plot values by deprivation and simulate sii
df |> 
  plotly::plot_ly(
    x = ~ deprivation
  ) |> 
  plotly::add_segments(
    name = "95% Confidence Interval",
    x = ~ deprivation, xend = ~ deprivation,
    y = ~ lower_confidence_limit, yend = ~ upper_confidence_limit,
    line = list(color = adjustcolor("#abc0e0", alpha.f = 0.3), width = 5),
    hovertemplate = ""
  ) |> 
  plotly::add_trace(
    name = "Rate",
    y = ~ value,
    type = "scatter",
    mode = "markers",
    marker = list(size = 10, color = "#abc0e0"),
    hovertemplate = ~ text
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = fitted(fit),
    type = "scatter",
    mode = "lines",
    line = list(color = "#abc0e0", dash = "dot"),
    hovertemplate = glue::glue("SII: {fitted(fit)}")
  ) |> 
  plotly::add_annotations(
    x = ~ 3,
    y = ~ 1.5,
    text = glue::glue("<b>Slope Index of Inequality</b>\n{round(df_sii$estimate, digits = 1)}%"),
    showarrow = FALSE
  ) |> 
  plotly::layout(
    title = "Crude  treated to appropriate threshold (18+) - September 2024",
    font = plotly_font_family,
    legend = list(orientation = "h"),
    xaxis = list(title = ""),
    yaxis = list(
      title = "People treated to appropriate threshold\n(percent)",
      rangemode = "tozero"
    )
  ) |> 
  configure_plotly()
```

```{r}
#| fig-height: 6
#| fig-cap: Trend in inequality (SII) of crude rates of treated to appropriate threshold 

# get the latest reporting period
df <-
  df_dep_eng |> 
  dplyr::filter(
    indicator_code == "CVDP007HYP",
    metric_category_type_name == "Deprivation quintile"
  ) |> 
  dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
  dplyr::summarise(
    sii = healthequal::sii(
      est = value,
      subgroup_order = subgroup_order,
      weight = denominator
    ),
    .by = c(time_period_month, time_period_name_f)
  ) |> 
  tidyr::unnest(sii) |> 
  dplyr::mutate(
    text = glue::glue(
      "<b>{time_period_name_f}</b>\n",
      "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
      "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
    )
  )
    
# plot the sii over time
df |> 
  plotly::plot_ly(
    x = ~ time_period_month
  ) |> 
  plotly::add_trace(
    name = "Upper CI",
    y = ~ upperci,
    type = "scatter",
    mode = "lines",
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "Lower CI",
    y = ~ lowerci,
    type = "scatter",
    mode = "lines",
    fill = "tonexty",
    fillcolor = adjustcolor("#abc0e0", alpha.f = 0.2),
    line = list(color = "transparent"),
    hoverinfo = "skip"
  ) |> 
  plotly::add_trace(
    name = "SII",
    y = ~ estimate,
    type = "scatter",
    mode = "lines+markers",
    hovertemplate = ~ text,
    line = list(color = "#abc0e0"),
    marker = list(color = "#abc0e0")
  ) |> 
  plotly::layout(
    title = "Slope Index of Inequality (SII) timeseries",
    font = plotly_font_family,
    showlegend = FALSE,
    yaxis = list(
      title = "Slope Index of Inequality (SII)\n(Closer to zero is better)", 
      showgrid = FALSE, showline = FALSE, 
      rangemode = "tozero"
    ),
    xaxis = list(title = "", showgrid = FALSE, showline = FALSE)
  ) |> 
  configure_plotly()
```

There was a general trend of increasing inequality between March 2022 and March 2024, from 3.2% to 5.7%. There were two points of exceptions, a higher increase in inequality in March 2024 and a fall in inequality in June 2024.

There is a sharp fall in inequality between March 2024 and June 2024 (from 5.7% to 4.2%).

The confidence intervals are much tighter in this plot than those seen in the age-standardised hypertension prevalence (see @sec-age-standardised-prevalence), indicating there is much less uncertainty about these SII estimates.

### Geography

```{r}
# expensive operation - process only if required
if (params$flag_calc_expensive_operations) {
  # prepare the data
  df_dep_icb_sii <-
    df_dep_icb |> 
    dplyr::filter(
      indicator_code == "CVDP007HYP",
      metric_category_type_name == "Deprivation quintile"
    ) |> 
    # continue with wrangling
    dplyr::mutate(subgroup_order = as.numeric(deprivation)) |> 
    dplyr::summarise(
      sii = healthequal::sii(
        est = value,
        subgroup_order = subgroup_order,
        weight = denominator,
        force = TRUE
      ),
      .by = c(time_period_month, time_period_name_f, area_code)
    ) |> 
    tidyr::unnest(sii) |> 
    dplyr::mutate(
      text = glue::glue(
        "<b>{time_period_name_f}</b>\n",
        "Slope Index of Inequality: {round(estimate, digits = 1)}\n",
        "95% Confidence Interval: {round(lowerci, digits = 1)} to {round(upperci, digits = 1)}"
      )
    )
  
  # store for later use (this is an expensive operation)
  saveRDS(
    object = df_dep_icb_sii,
    file = here::here('data', 'project', 'df_dep_icb_sii_p007.Rds')
  )
}
```

```{r}
#| fig-height: 7
#| fig-cap: Geographical distribution of SII using crude rates of people treated to appropriate threshold 

# wrangling ---

# read the pre-processed icb sii file
# read the pre-processed icb sii file
df_sii <-
  readRDS(
    file = here::here('data', 'project', 'df_dep_icb_sii_p007.Rds')
  ) |> 
  # sort by area code
  dplyr::arrange(area_code, time_period_name_f) |> 
  # add in ICB name
  dplyr::left_join(
    y = icb_sf |> 
      dplyr::select(
        ICB23CD,
        area_name = ICB23NM
      ) |> 
      # shorten the ICB name a little
      dplyr::mutate(
        area_name = area_name |> 
          stringr::str_replace(
            pattern = "Integrated Care Board",
            replacement = "ICB"
          )
      ),
    by = dplyr::join_by(
      area_code == ICB23CD
    )
  ) |> 
  # prepare the hover text info
  dplyr::mutate(
    hover_label = glue::glue(
      "<strong>{area_name}</strong></br>",
      "{time_period_name_f}</br>",
      "<strong>Slope Index of Inequality:</strong> {round(estimate, digits = 1)}%</br>",
      "<strong>95% Confidence Interval:</strong> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    ),
    hover_label_plotly = glue::glue(
      "<b>{area_name}</b>\n",
      "{time_period_name_f}\n",
      "<b>Slope Index of Inequality:</b> {round(estimate, digits = 1)}%\n",
      "<b>95% Confidence Interval:</b> {round(lowerci, digits = 1)}% to {round(upperci, digits = 1)}%"
    )
  )

# define the colour palette for the choropleth
pal <- leaflet::colorNumeric(
  palette = "RdYlBu",
  # use a balanced set to ensure zero is the mid-point
  domain = seq(
    from = ceiling(max(abs(df_sii$estimate)))*-1,
    to = ceiling(max(abs(df_sii$estimate))),
    by = 1
  ),
  reverse = FALSE
)

# define a vector to list the layers
poly_layers <- c()

# leaflet map ---

# build the map
icb_sf |> 
  leaflet::leaflet() |> 
  add_leaflet_polygon(report_period = "To June 2022") |>
  add_leaflet_polygon(report_period = "To September 2022") |>
  add_leaflet_polygon(report_period = "To December 2022") |>
  add_leaflet_polygon(report_period = "To March 2023") |> 
  add_leaflet_polygon(report_period = "To June 2023") |> 
  add_leaflet_polygon(report_period = "To September 2023") |> 
  add_leaflet_polygon(report_period = "To December 2023") |> 
  add_leaflet_polygon(report_period = "To March 2024") |> 
  add_leaflet_polygon(report_period = "To June 2024") |>
  add_leaflet_polygon(report_period = "To September 2024") |> 
  leaflet::addLayersControl(
    baseGroups = poly_layers,
    options = leaflet::layersControlOptions(collapsed = FALSE)
  ) |> 
  leaflet::addLegend(
    pal = pal,
    values = df_sii$estimate,
    opacity = 0.7,
    title = "Key (%)",
    position = "bottomleft",
    labels = bins
  )
```

This map presents a the SII for each ICB as a snapshot by each reporting period. The colours range from red-yellow-blue, where generally:

-   red means a negative SII, which is where people with hypertension who live in areas of greater deprivation have higher rates of treated to appropriate threshold ,

-   yellow means an SII equal to or around zero, which means greater equity of treated to appropriate threshold with respect to deprivation, and

-   blue means a positive SII, which is the area typically thought of as inequity of access where those who live in areas of highest deprivation have the lowest rates of treated to appropriate threshold.

In June 2022 there is one ICB with an orange colour, Birmingham and Solihull, indicating higher deprivation correlates with higher rates of treated to appropriate threshold .

A small number of ICBs have light yellow colour signifying more or less equality of access.

The majority of ICBs appear to be coloured various shades of blue, indicating they have inequity in which those who live in areas of higher deprivation have lower rates of treatment to appropriate threshold.

By March 2023 nearly all ICBs are coloured blue with a few coloured deeper blue, indicating greater inequity of access for people living in areas of highest deprivation.

In June 2024 and September 2024 the darker blue is replaced by more lighter shades indicating that inequity still exists but to a lesser extent than the peak of March 2023.

#### Focal ICBs

```{r}
#| fig-height: 60
#| fig-cap: Trend in inequality (SII) of crude rates of treatment to threshold for the focal ICBs
 
# produce a facet/subplot timeseries plots for each ICB
plot_list <-
  plot_focal_scheme_sii_timeseries(
    .df_sii = df_sii,
    .df_icb_focal = df_icb_focal
  )

# display the plot
plot_list
```
